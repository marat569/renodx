// menu (no render)

#include "./colormath.hlsl"
#include "./cp2077.h"
#include "./injectedBuffer.hlsl"

static float _291;

cbuffer _31_33 : register(b0, space0) {
  float4 cb0[30] : packoffset(c0);
};

cbuffer _40_42 : register(b6, space0) {
  float4 cb6[30] : packoffset(c0);
};

cbuffer _36_38 : register(b12, space0) {
  float4 cb12[99] : packoffset(c0);
};

Texture2D<float4> _8 : register(t32, space0);
Texture2D<uint2> _12 : register(t51, space0);  // was uint4
Texture2D<float4> _13 : register(t0, space0);
Texture2D<float4> _14 : register(t1, space0);
Texture2D<float4> _15 : register(t2, space0);
Texture2D<float4> _16 : register(t3, space0);
Texture2D<float4> _17 : register(t5, space0);
Texture2D<float4> _18 : register(t6, space0);
Texture2D<float4> _19 : register(t8, space0);
StructuredBuffer<float> _22 : register(t9, space0);
Texture2D<float4> _23 : register(t10, space0);
RWTexture2D<float4> _26 : register(u0, space0);
RWTexture2D<float4> _27 : register(u1, space0);
SamplerState _45 : register(s0, space0);

static uint3 gl_GlobalInvocationID;
struct SPIRV_Cross_Input {
  uint3 gl_GlobalInvocationID : SV_DispatchThreadID;
};

void comp_main() {
  float _70 = float(gl_GlobalInvocationID.x);
  float _71 = float(gl_GlobalInvocationID.y);
  float _81 = (_70 + 0.5f) / cb6[12u].z;
  float _82 = (_71 + 0.5f) / cb6[12u].w;
  bool _98 = ((_81 < cb6[9u].y) || (_82 < cb6[9u].z)) || (((1.0f - cb6[9u].y) < _81) || ((1.0f - cb6[9u].z) < _82));
  float _99;
  float _103;
  float _106;
  if (_98) {
    _99 = 0.0f;
    _103 = 0.0f;
    _106 = 0.0f;
  } else {
    bool _119 = cb6[0u].x > 0.0f;
    float _121 = _81 + (-0.5f);
    float _123 = _82 + (-0.5f);
    float _127 = cb6[0u].y + 0.119999997317790985107421875f;
    float _131 = max(_127 + abs(_121), 0.0f);
    float _132 = max(_127 + abs(_123), 0.0f);
    float _139 = clamp(sqrt((_132 * _132) + (_131 * _131)) * 20.0f, 0.0f, 1.0f);
    float _146 = ((_139 * _139) * cb6[0u].x) * (3.0f - (_139 * 2.0f));
    float _147 = _146 * 0.699999988079071044921875f;
    float _150 = ceil(_147) - _147;
    float _153 = (_150 * 50.0f) + 1.0f;
    float _162 = (((cos(cb0[0u].x) * 2.0f) + 200.0f) * _150) + 1.0f;
    float _174 = frac(floor(_153 * _81) * 0.103100001811981201171875f);
    float _175 = frac(floor(_162 * _82) * 0.103100001811981201171875f);
    float _176 = _175 + 33.3300018310546875f;
    float _178 = _174 + 33.3300018310546875f;
    float _179 = dot(float3(_174, _175, _174), float3(_176, _178, _178));
    float _185 = _175 + _174;
    float _188 = frac((_185 + (_179 * 2.0f)) * (_179 + _174));
    float _213 = abs(sin((_146 * 0.1680000126361846923828125f) * cb0[0u].x));
    float _218 = (_146 * 0.14000000059604644775390625f) + 1.0f;
    float _224 = dot(float3(_175, _174, _175), float3(_178, _176, _176));
    float _237 = (floor(frac(frac((_185 + (_224 * 2.0f)) * (_224 + _175)) + _213) * _218) * (1.0f / (((cos(frac(_188 + abs(sin(cb0[0u].x * 5000.0f))) * cb0[0u].x) * 0.0199999995529651641845703125f) + 1.0f) * _162))) + _82;
    float _239 = _237 * cb6[12u].w;
    float _248 = frac(round((_146 * 0.125f) * _239) * 0.103100001811981201171875f);
    float _249 = frac((_146 * 2.0620000362396240234375f) * cb0[0u].x);
    float _250 = _249 + 33.3300018310546875f;
    float _251 = _248 + 33.3300018310546875f;
    float _252 = dot(float3(_248, _249, _248), float3(_250, _251, _251));
    float _266 = frac(round((_146 * 0.012500000186264514923095703125f) * _239) * 0.103100001811981201171875f);
    float _267 = _266 + 33.3300018310546875f;
    float _268 = dot(float3(_266, _249, _266), float3(_250, _267, _267));
    float _285 = _119 ? ((((cb6[12u].z * ((floor(frac(_188 + _213) * _218) * (1.0f / (((sin(frac(_188 + abs(sin(cb0[0u].x * 100.0f))) * cb0[0u].x) * 0.0199999995529651641845703125f) + 1.0f) * _153))) + _81)) + 2.0f) + ((((_146 * _146) * 960.0f) * frac(((_249 + _248) + (_252 * 2.0f)) * (_252 + _248))) * frac(((_249 + _266) + (_268 * 2.0f)) * (_268 + _266)))) / cb6[12u].z) : _81;
    float _286 = _119 ? _237 : _82;
    bool _287 = cb6[0u].y > 0.0f;
    bool _289 = cb6[12u].x > 0.0f;
    float _1088;
    float _1089;
    float _1090;
    float _1092;
    float _1094;
    if (_287) {
      float _317 = floor(_285 * 2.5f) * 0.4000000059604644775390625f;
      float _319 = floor(_286 * 10.0f) * 0.100000001490116119384765625f;
      float _321 = _317 + 0.20000000298023223876953125f;
      float _323 = _319 + 0.0500000007450580596923828125f;
      float _327 = floor((cb0[0u].x * 2.0f) + (cb6[0u].y * 20.0f));
      float _328 = _327 * 0.00999999977648258209228515625f;
      float _342 = _321 + (((_328 + 1.0f) - (floor(_327 * 9.9999997473787516355514526367188e-05f) * 100.0f)) * 0.00999999977648258209228515625f);
      float _343 = _323 + (((_327 + 1.0f) - (floor(_328) * 100.0f)) * 0.00999999977648258209228515625f);
      float _353 = frac(_342 * 0.103100001811981201171875f);
      float _354 = frac(_343 * 0.103100001811981201171875f);
      float _356 = _353 + 33.3300018310546875f;
      float _357 = dot(float3(_353, _354, _353), float3(_354 + 33.3300018310546875f, _356, _356));
      float _365 = frac(((_354 + _353) + (_357 * 2.0f)) * (_357 + _353));
      float _368 = ((1.0f - _365) * ((cb6[0u].y * 0.75f) + (-0.100000001490116119384765625f))) + _365;
      float _371 = round(_368 - (_368 * (0.5f - (cb6[0u].y * 0.375f))));
      float _372 = _371 * _371;
      float _373 = _285 - _321;
      float _374 = _286 - _323;
      float _375 = _321 * _342;
      float _376 = _323 * _343;
      float _381 = (_317 + 0.300000011920928955078125f) * _342;
      float _382 = (_319 + 0.1500000059604644775390625f) * _343;
      float _385 = frac(_375 * 0.103100001811981201171875f);
      float _386 = frac(_376 * 0.103100001811981201171875f);
      float _388 = _385 + 33.3300018310546875f;
      float _389 = dot(float3(_385, _386, _385), float3(_386 + 33.3300018310546875f, _388, _388));
      float _402 = frac((_375 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _403 = frac((_376 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _405 = _402 + 33.3300018310546875f;
      float _406 = dot(float3(_402, _403, _402), float3(_403 + 33.3300018310546875f, _405, _405));
      float _420 = floor(frac(((_386 + _385) + (_389 * 2.0f)) * (_389 + _385)) * 3.25f) * 0.100000001490116119384765625f;
      float _421 = floor(frac(((_403 + _402) + (_406 * 2.0f)) * (_406 + _402)) * 3.25f) * 0.02500000037252902984619140625f;
      float _423 = _420 + (-0.20000000298023223876953125f);
      float _425 = _421 + (-0.0500000007450580596923828125f);
      float _429 = frac(_381 * 0.103100001811981201171875f);
      float _430 = frac(_382 * 0.103100001811981201171875f);
      float _432 = _429 + 33.3300018310546875f;
      float _433 = dot(float3(_429, _430, _429), float3(_430 + 33.3300018310546875f, _432, _432));
      float _446 = frac((_381 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _447 = frac((_382 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _449 = _446 + 33.3300018310546875f;
      float _450 = dot(float3(_446, _447, _446), float3(_447 + 33.3300018310546875f, _449, _449));
      float _463 = floor(frac(((_430 + _429) + (_433 * 2.0f)) * (_433 + _429)) * 3.25f) * 0.100000001490116119384765625f;
      float _464 = floor(frac(((_447 + _446) + (_450 * 2.0f)) * (_450 + _446)) * 3.25f) * 0.02500000037252902984619140625f;
      float _465 = _463 + (-0.20000000298023223876953125f);
      float _466 = _464 + (-0.0500000007450580596923828125f);
      float _469 = _373 - _423;
      float _470 = _374 - _425;
      float _480 = (-0.0250000059604644775390625f) - _373;
      float _482 = _480 + _420;
      float _483 = (-0.006250001490116119384765625f) - _374;
      float _485 = _483 + _421;
      uint _500 = (((((uint(_482 > 0.0f) + ((_482 < 0.0f) ? 4294967295u : 0u)) + ((_469 < 0.0f) ? 4294967295u : 0u)) + uint(_469 > 0.0f)) + ((_470 < 0.0f) ? 4294967295u : 0u)) + uint(_470 > 0.0f)) + (uint(_485 > 0.0f) - uint(_485 < 0.0f));
      float _508 = min(float(int(uint(int(_500) > int(3u)) - uint(int(_500) < int(3u)))), 0.0f);
      float _513 = _373 - _465;
      float _514 = _374 - _466;
      float _523 = _480 + _463;
      float _524 = _483 + _464;
      uint _539 = (((((uint(_523 > 0.0f) + ((_523 < 0.0f) ? 4294967295u : 0u)) + ((_513 < 0.0f) ? 4294967295u : 0u)) + uint(_513 > 0.0f)) + ((_514 < 0.0f) ? 4294967295u : 0u)) + uint(_514 > 0.0f)) + (uint(_524 > 0.0f) - uint(_524 < 0.0f));
      float _546 = min(float(int(uint(int(_539) > int(3u)) - uint(int(_539) < int(3u)))), 0.0f);
      float _553 = _285 + ((_372 * (((_423 - _465) * _546) + ((_465 - _423) * _508))) * 1.2000000476837158203125f);
      float _557 = _286 + ((_372 * (((_425 - _466) * _546) + ((_466 - _425) * _508))) * 1.2000000476837158203125f);
      uint _558 = uint(_81);
      uint _559 = uint(_82);
      float4 _560 = _8.Load(int3(uint2(_558, _559), 0u));
      float _562 = _560.y;
      float _870;
      if (_289) {
        uint _789 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * float(_558)), uint(cb12[79u].y * float(_559))), 0u)).y & 31u);
        float4 _792 = _14.Load(int3(uint2(_558 & 255u, _559 & 255u), 0u));
        float _795 = _792.y;
        float _799 = ((_792.x + _795) + _792.z) * 0.3333333432674407958984375f;
        float _800 = cb6[12u].x * _562;
        float _807 = _795 - _799;
        float _809 = _799 + (-0.5f);
        uint4 _815 = asuint(cb6[17u]);
        float _864 = (((((((_809 + (cb6[18u].w * _807)) * cb6[18u].y) * float(min((_815.x & _789), 1u))) + 1.0f) * (_800 / max(1.0f - _800, 9.9999999747524270787835121154785e-07f))) * ((((_809 + (cb6[19u].w * _807)) * cb6[19u].y) * float(min((_815.y & _789), 1u))) + 1.0f)) * ((((_809 + (cb6[20u].w * _807)) * cb6[20u].y) * float(min((_815.z & _789), 1u))) + 1.0f)) * ((((_809 + (cb6[21u].w * _807)) * cb6[21u].y) * float(min((_815.w & _789), 1u))) + 1.0f);
        _870 = cb6[12u].y * (_864 / max(_864 + 1.0f, 1.0f));
      } else {
        _870 = _562;
      }
      float _872 = _870 * cb6[0u].y;
      float _874 = (_553 + (-0.5f)) + _872;
      float _876 = (0.5f - _557) + _872;
      float _878 = atan(_876 / _874);
      bool _883 = _874 < 0.0f;
      bool _884 = _874 == 0.0f;
      bool _885 = _876 >= 0.0f;
      bool _886 = _876 < 0.0f;
      float _900 = sqrt((_874 * _874) + (_876 * _876));
      float _903 = ((_884 && _885) ? 1.57079637050628662109375f : ((_884 && _886) ? (-1.57079637050628662109375f) : ((_883 && _886) ? (_878 + (-3.1415927410125732421875f)) : ((_883 && _885) ? (_878 + 3.1415927410125732421875f) : _878)))) + clamp(cb6[0u].y * (_870 * 0.5f), 0.0f, 1.0f);
      uint _914 = uint(cb6[12u].z * frac((cos(_903) * _900) + 0.5f));
      uint _915 = uint(cb6[12u].w * frac(0.5f - (sin(_903) * _900)));
      float4 _916 = _8.Load(int3(uint2(_914, _915), 0u));
      float _918 = _916.x;
      float _919 = _916.y;
      float _920 = _916.z;
      float frontier_phi_14_12_ladder;
      float frontier_phi_14_12_ladder_1;
      float frontier_phi_14_12_ladder_2;
      float frontier_phi_14_12_ladder_3;
      float frontier_phi_14_12_ladder_4;
      if (_289) {
        uint _1229 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * float(_914)), uint(cb12[79u].y * float(_915))), 0u)).y & 31u);
        float4 _1232 = _14.Load(int3(uint2(_914 & 255u, _915 & 255u), 0u));
        float _1234 = _1232.x;
        float _1235 = _1232.y;
        float _1236 = _1232.z;
        float _1239 = ((_1234 + _1235) + _1236) * 0.3333333432674407958984375f;
        float _1240 = cb6[12u].x * _918;
        float _1241 = cb6[12u].x * _919;
        float _1242 = cb6[12u].x * _920;
        float _1255 = _1234 - _1239;
        float _1256 = _1235 - _1239;
        float _1257 = _1236 - _1239;
        float _1261 = _1239 + (-0.5f);
        uint4 _1273 = asuint(cb6[17u]);
        float _1277 = float(min((_1273.x & _1229), 1u));
        float _1305 = float(min((_1273.y & _1229), 1u));
        float _1333 = float(min((_1273.z & _1229), 1u));
        float _1361 = float(min((_1273.w & _1229), 1u));
        float _1368 = (((((((_1261 + (cb6[18u].w * _1255)) * cb6[18u].x) * _1277) + 1.0f) * (_1240 / max(1.0f - _1240, 9.9999999747524270787835121154785e-07f))) * ((((_1261 + (cb6[19u].w * _1255)) * cb6[19u].x) * _1305) + 1.0f)) * ((((_1261 + (cb6[20u].w * _1255)) * cb6[20u].x) * _1333) + 1.0f)) * ((((_1261 + (cb6[21u].w * _1255)) * cb6[21u].x) * _1361) + 1.0f);
        float _1369 = (((((((_1261 + (cb6[18u].w * _1256)) * cb6[18u].y) * _1277) + 1.0f) * (_1241 / max(1.0f - _1241, 9.9999999747524270787835121154785e-07f))) * ((((_1261 + (cb6[19u].w * _1256)) * cb6[19u].y) * _1305) + 1.0f)) * ((((_1261 + (cb6[20u].w * _1256)) * cb6[20u].y) * _1333) + 1.0f)) * ((((_1261 + (cb6[21u].w * _1256)) * cb6[21u].y) * _1361) + 1.0f);
        float _1370 = (((((((_1261 + (cb6[18u].w * _1257)) * cb6[18u].z) * _1277) + 1.0f) * (_1242 / max(1.0f - _1242, 9.9999999747524270787835121154785e-07f))) * ((((_1261 + (cb6[19u].w * _1257)) * cb6[19u].z) * _1305) + 1.0f)) * ((((_1261 + (cb6[20u].w * _1257)) * cb6[20u].z) * _1333) + 1.0f)) * ((((_1261 + (cb6[21u].w * _1257)) * cb6[21u].z) * _1361) + 1.0f);
        frontier_phi_14_12_ladder = _557;
        frontier_phi_14_12_ladder_1 = _553;
        frontier_phi_14_12_ladder_2 = cb6[12u].y * (_1368 / max(_1368 + 1.0f, 1.0f));
        frontier_phi_14_12_ladder_3 = cb6[12u].y * (_1369 / max(_1369 + 1.0f, 1.0f));
        frontier_phi_14_12_ladder_4 = cb6[12u].y * (_1370 / max(_1370 + 1.0f, 1.0f));
      } else {
        frontier_phi_14_12_ladder = _557;
        frontier_phi_14_12_ladder_1 = _553;
        frontier_phi_14_12_ladder_2 = _918;
        frontier_phi_14_12_ladder_3 = _919;
        frontier_phi_14_12_ladder_4 = _920;
      }
      _1088 = frontier_phi_14_12_ladder_1;
      _1089 = frontier_phi_14_12_ladder;
      _1090 = frontier_phi_14_12_ladder_2;
      _1092 = frontier_phi_14_12_ladder_3;
      _1094 = frontier_phi_14_12_ladder_4;
    } else {
      float4 _563 = _8.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
      float _565 = _563.x;
      float _566 = _563.y;
      float _567 = _563.z;
      float frontier_phi_14_6_ladder;
      float frontier_phi_14_6_ladder_1;
      float frontier_phi_14_6_ladder_2;
      float frontier_phi_14_6_ladder_3;
      float frontier_phi_14_6_ladder_4;
      if (_289) {
        uint _933 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * _70), uint(cb12[79u].y * _71)), 0u)).y & 31u);
        float4 _936 = _14.Load(int3(uint2(gl_GlobalInvocationID.x & 255u, gl_GlobalInvocationID.y & 255u), 0u));
        float _938 = _936.x;
        float _939 = _936.y;
        float _940 = _936.z;
        float _943 = ((_938 + _939) + _940) * 0.3333333432674407958984375f;
        float _944 = cb6[12u].x * _565;
        float _945 = cb6[12u].x * _566;
        float _946 = cb6[12u].x * _567;
        float _959 = _938 - _943;
        float _960 = _939 - _943;
        float _961 = _940 - _943;
        float _965 = _943 + (-0.5f);
        uint4 _977 = asuint(cb6[17u]);
        float _981 = float(min((_977.x & _933), 1u));
        float _1009 = float(min((_977.y & _933), 1u));
        float _1037 = float(min((_977.z & _933), 1u));
        float _1065 = float(min((_977.w & _933), 1u));
        float _1072 = (((((((_965 + (cb6[18u].w * _959)) * cb6[18u].x) * _981) + 1.0f) * (_944 / max(1.0f - _944, 9.9999999747524270787835121154785e-07f))) * ((((_965 + (cb6[19u].w * _959)) * cb6[19u].x) * _1009) + 1.0f)) * ((((_965 + (cb6[20u].w * _959)) * cb6[20u].x) * _1037) + 1.0f)) * ((((_965 + (cb6[21u].w * _959)) * cb6[21u].x) * _1065) + 1.0f);
        float _1073 = (((((((_965 + (cb6[18u].w * _960)) * cb6[18u].y) * _981) + 1.0f) * (_945 / max(1.0f - _945, 9.9999999747524270787835121154785e-07f))) * ((((_965 + (cb6[19u].w * _960)) * cb6[19u].y) * _1009) + 1.0f)) * ((((_965 + (cb6[20u].w * _960)) * cb6[20u].y) * _1037) + 1.0f)) * ((((_965 + (cb6[21u].w * _960)) * cb6[21u].y) * _1065) + 1.0f);
        float _1074 = (((((((_965 + (cb6[18u].w * _961)) * cb6[18u].z) * _981) + 1.0f) * (_946 / max(1.0f - _946, 9.9999999747524270787835121154785e-07f))) * ((((_965 + (cb6[19u].w * _961)) * cb6[19u].z) * _1009) + 1.0f)) * ((((_965 + (cb6[20u].w * _961)) * cb6[20u].z) * _1037) + 1.0f)) * ((((_965 + (cb6[21u].w * _961)) * cb6[21u].z) * _1065) + 1.0f);
        frontier_phi_14_6_ladder = _286;
        frontier_phi_14_6_ladder_1 = _285;
        frontier_phi_14_6_ladder_2 = cb6[12u].y * (_1072 / max(_1072 + 1.0f, 1.0f));
        frontier_phi_14_6_ladder_3 = cb6[12u].y * (_1073 / max(_1073 + 1.0f, 1.0f));
        frontier_phi_14_6_ladder_4 = cb6[12u].y * (_1074 / max(_1074 + 1.0f, 1.0f));
      } else {
        frontier_phi_14_6_ladder = _286;
        frontier_phi_14_6_ladder_1 = _285;
        frontier_phi_14_6_ladder_2 = _565;
        frontier_phi_14_6_ladder_3 = _566;
        frontier_phi_14_6_ladder_4 = _567;
      }
      _1088 = frontier_phi_14_6_ladder_1;
      _1089 = frontier_phi_14_6_ladder;
      _1090 = frontier_phi_14_6_ladder_2;
      _1092 = frontier_phi_14_6_ladder_3;
      _1094 = frontier_phi_14_6_ladder_4;
    }
    bool _1104 = cb6[1u].z > 0.0f;
    float _1389;
    if ((asuint(cb6[13u]).z != 0u) && _1104) {
      _1389 = (cb6[1u].z * (asfloat(_22.Load(6u).x) + (-1.0f))) + 1.0f;
    } else {
      _1389 = 1.0f;
    }
    float _1394 = _1088 + (-0.5f);
    float _1396 = (_1089 + (-0.5f)) * 2.0f;
    float _1404 = _1088 - (((_1396 * _1396) * _1394) * cb6[3u].x);
    float _1405 = _1089 - ((((_1394 * _1394) * 2.0f) * _1396) * cb6[3u].y);
    float _1408 = (_1404 + (-0.5f)) * 2.0f;
    float _1409 = (_1405 + (-0.5f)) * 2.0f;
    float _1411 = cb0[0u].x * 0.004999999888241291046142578125f;
    float _1414 = (clamp(_1405, 0.0f, 1.0f) + 1.0f) - _1411;
    float _1419 = clamp(abs(cos(_1414 * 650.0f)), 0.0f, 1.0f);
    float _1425 = clamp(_1404, 0.0f, 1.0f) + 1.0f;
    float _1426 = _1425 - _1411;
    float _1432 = sin(cb0[0u].x);
    float _1433 = _1425 + _1411;
    float _1448 = clamp(((((_1432 + _1432) * 0.100000001490116119384765625f) + 0.540000021457672119140625f) + ((clamp(abs(cos(_1433 * 550.0f)), 0.0f, 1.0f) + clamp(abs(cos(_1426 * 250.0f)), 0.0f, 1.0f)) * 0.1799999773502349853515625f)) * ((_1419 * 0.39999997615814208984375f) + 0.60000002384185791015625f), 0.0f, 1.0f);
    float _1600;
    float _1602;
    float _1604;
    if (cb6[1u].w > 0.0f) {
      float4 _1573 = _18.SampleLevel(_45, float2(_81, _82), 0.0f);
      float _1584 = (clamp(abs(cos(_1414 * 250.0f)), 0.0f, 1.0f) * 0.0007999999797903001308441162109375f) + 0.00120000005699694156646728515625f;
      float _1591 = (_1419 * 0.001199999940581619739532470703125f) + 0.001800000085495412349700927734375f;
      float _1593 = (_1584 + _1573.x) - _1591;
      float _1594 = (_1584 + _1573.y) - _1591;
      float _1595 = (_1584 + _1573.z) - _1591;
      float _1761;
      float _1762;
      float _1763;
      if (cb6[6u].x > 0.0f) {
        float _1751 = clamp((sqrt((_123 * _123) + (_121 * _121)) - cb6[5u].z) / (cb6[5u].w - cb6[5u].z), 0.0f, 1.0f);
        float _1757 = 1.0f - (((_1751 * _1751) * (3.0f - (_1751 * 2.0f))) * cb6[6u].x);
        _1761 = _1757 * _1593;
        _1762 = _1757 * _1594;
        _1763 = _1757 * _1595;
      } else {
        _1761 = _1593;
        _1762 = _1594;
        _1763 = _1595;
      }
      float _1765 = dot(float3(_1761, _1762, _1763), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      _1600 = (((_1761 - _1765) * cb6[6u].y) + _1765) * cb6[1u].w;
      _1602 = (((_1762 - _1765) * cb6[6u].y) + _1765) * cb6[1u].w;
      _1604 = (((_1763 - _1765) * cb6[6u].y) + _1765) * cb6[1u].w;
    } else {
      _1600 = 0.0f;
      _1602 = 0.0f;
      _1604 = 0.0f;
    }
    float _1793;
    float _1794;
    float _1795;
    if (cb6[2u].x > 0.0f) {
      float4 _1782 = _17.SampleLevel(_45, float2(_1404, 1.0f - _1405), 0.0f);

      // Custom
      if (injectedData.toneMapGammaCorrection >= 1.f) {
        _1782 = renodx::color::correct::Gamma(max(0.f, _1782));
      }

      _1793 = (cb6[2u].x * _1782.x) + _1600;
      _1794 = (cb6[2u].x * _1782.y) + _1602;
      _1795 = (cb6[2u].x * _1782.z) + _1604;
    } else {
      _1793 = _1600;
      _1794 = _1602;
      _1795 = _1604;
    }
    float _1973;
    float _1974;
    float _1975;
    if (_1104) {
      float4 _1936 = _16.SampleLevel(_45, float2(_1088, _1089), 0.0f);
      float4 _1943 = _15.SampleLevel(_45, float2(_1088, _1089), 0.0f);
      float _1948 = _1943.w;
      float _1949 = 1.0f - _1948;
      float _1954 = (_1949 * _1936.w) + _1948;
      _1973 = (((_1954 * ((_1943.x - _1090) + (_1949 * _1936.x))) + _1090) * cb6[1u].z) + _1793;
      _1974 = (((_1954 * ((_1943.y - _1092) + (_1949 * _1936.y))) + _1092) * cb6[1u].z) + _1794;
      _1975 = (((_1954 * ((_1943.z - _1094) + (_1949 * _1936.z))) + _1094) * cb6[1u].z) + _1795;
    } else {
      _1973 = _1793;
      _1974 = _1794;
      _1975 = _1795;
    }
    float _2145;
    float _2147;
    float _2149;
    if (cb6[1u].x > 0.0f) {
      float _2052 = cb6[6u].w * _1408;
      float _2053 = cb6[6u].w * _1409;
      float4 _2057 = _13.SampleLevel(_45, float2(_2052 + _1404, _2053 + _1405), 0.0f);
      float4 _2061 = _13.SampleLevel(_45, float2(_1404, _1405), 0.0f);
      float4 _2068 = _13.SampleLevel(_45, float2(_1404 - _2052, _1405 - _2053), 0.0f);
      float4 _2083 = _13.SampleLevel(_45, float2((cb6[7u].x * _1408) + _1404, (cb6[7u].y * _1409) + _1405), 1.0f);
      float4 _2094 = _13.SampleLevel(_45, float2((cb6[7u].z * _1408) + _1404, (cb6[7u].w * _1409) + _1405), 2.0f);
      float4 _2109 = _13.SampleLevel(_45, float2((cb6[8u].x * _1408) + _1404, (cb6[8u].y * _1409) + _1405), 4.0f);

      // Custom
      if (injectedData.toneMapGammaCorrection >= 1.f) {
        _2057 = renodx::color::correct::Gamma(max(0.f, _2057));
        _2061 = renodx::color::correct::Gamma(max(0.f, _2061));
        _2068 = renodx::color::correct::Gamma(max(0.f, _2068));
        _2083 = renodx::color::correct::Gamma(max(0.f, _2083));
        _2094 = renodx::color::correct::Gamma(max(0.f, _2094));
        _2109 = renodx::color::correct::Gamma(max(0.f, _2109));
      }

      float _2141 = 1.0f - (((_2061.w + _2057.w) + _2068.w) * 0.3333333432674407958984375f);
      float _2142 = clamp(_1448 * (((cb6[8u].w * _2094.x) + (cb6[8u].z * _2083.x)) + (cb6[9u].x * _2109.x)), 0.0f, 1.0f) * _2141;
      float _2143 = clamp(_1448 * (((cb6[8u].w * _2094.y) + (cb6[8u].z * _2083.y)) + (cb6[9u].x * _2109.y)), 0.0f, 1.0f) * _2141;
      float _2144 = clamp(_1448 * (((cb6[8u].w * _2094.z) + (cb6[8u].z * _2083.z)) + (cb6[9u].x * _2109.z)), 0.0f, 1.0f) * _2141;
      float _2236;
      float _2237;
      float _2238;
      if (_1104) {
        float _2232 = 1.0f - (dot(float3(cb6[1u].z * _1090, cb6[1u].z * _1092, cb6[1u].z * _1094), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f)) * 0.699999988079071044921875f);
        _2236 = _2232 * _2142;
        _2237 = _2232 * _2143;
        _2238 = _2232 * _2144;
      } else {
        _2236 = _2142;
        _2237 = _2143;
        _2238 = _2144;
      }
      float _2240 = dot(float3(_2236, _2237, _2238), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      float _2252 = cb6[1u].x * _1389;
      float _2266 = _1404 - cb6[3u].z;
      float _2267 = _1405 - cb6[3u].w;
      float4 _2273 = _13.SampleLevel(_45, float2(_2266, _2267), 0.0f);
      float _2275 = _2273.w;
      float _2288 = 1.0f - (cb6[4u].x * clamp(exp2(log2(abs((clamp(cb6[4u].y, 0.0f, 1.0f) * (_19.SampleLevel(_45, float2(_2266, _2267), cb6[4u].y + (-1.0f)).w - _2275)) + _2275)) * 0.819999992847442626953125f), 0.0f, 1.0f));
      float _2289 = _1432 * 0.00999999977648258209228515625f;
      float _2317 = (((clamp((cos((_2289 + _1405) * 1700.0f) + 1.0f) * 0.75f, 0.0f, 1.0f) * 0.00850000046193599700927734375f) + 0.00150000001303851604461669921875f) * (((_2289 + 0.540000021457672119140625f) + (_1432 * 0.100000001490116119384765625f)) + ((clamp(abs(cos(_1433 * 350.0f)), 0.0f, 1.0f) + clamp(abs(cos(_1426 * 350.0f)), 0.0f, 1.0f)) * 0.1799999773502349853515625f))) + 0.9900000095367431640625f;
      float _2319 = (_2057.x * 2.0f) * _2317;
      float _2320 = (_2061.y * 2.0f) * _2317;
      float _2321 = (_2068.z * 2.0f) * _2317;
      float _2322 = dot(float3(_2319, _2320, _2321), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      float _2349 = cb6[5u].x * _1389;
      float4 _2351 = _19.SampleLevel(_45, float2(_1404, _1405), cb6[5u].y);
      _2145 = (((((_2319 - _2322) * cb6[6u].z) + _2322) * _1389) + ((((_2252 * (((_2236 - _2240) * cb6[6u].z) + _2240)) + _1973) * _2141) * _2288)) + (_2351.x * _2349);
      _2147 = (((((_2320 - _2322) * cb6[6u].z) + _2322) * _1389) + ((((_2252 * (((_2237 - _2240) * cb6[6u].z) + _2240)) + _1974) * _2141) * _2288)) + (_2351.y * _2349);
      _2149 = (((((_2321 - _2322) * cb6[6u].z) + _2322) * _1389) + ((((_2252 * (((_2238 - _2240) * cb6[6u].z) + _2240)) + _1975) * _2141) * _2288)) + (_2351.z * _2349);
    } else {
      _2145 = _1973;
      _2147 = _1974;
      _2149 = _1975;
    }
    float _102;
    float _105;
    float _108;
    if (cb6[1u].y > 0.0f) {
      float4 _2359 = _13.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
      float _2365 = (_1389 * 2.0f) * cb6[1u].y;
      _102 = (_2365 * _2359.x) + _2145;
      _105 = (_2365 * _2359.y) + _2147;
      _108 = (_2365 * _2359.z) + _2149;
    } else {
      _102 = _2145;
      _105 = _2147;
      _108 = _2149;
    }
    float frontier_phi_1_57_ladder;
    float frontier_phi_1_57_ladder_1;
    float frontier_phi_1_57_ladder_2;
    if (_287) {
      float _2449;
      float _2451;
      float _2453;
      float _2455;
      float _2457;
      float _2459;
      uint _2461;
      _2449 = 1.0f;
      _2451 = 1.0f;
      _2453 = 1.0f;
      _2455 = ((_70 / cb6[12u].z) * 0.800000011920928955078125f) * (cb6[12u].z / cb6[12u].w);
      _2457 = (_71 / cb6[12u].w) * 5.0f;
      _2459 = 1.0f;
      _2461 = 1u;
      float _2450;
      float _2452;
      float _2454;
      for (;;) {
        float _2463 = float(int(_2461));
        float _2464 = _2463 + _2455;
        float _2465 = _2463 + _2457;
        float _2466 = floor(_2464);
        float _2467 = floor(_2465);
        float _2475 = frac(_2466 * 0.103100001811981201171875f);
        float _2476 = frac(_2467 * 0.10300000011920928955078125f);
        float _2477 = frac(_2466 * 0.097300000488758087158203125f);
        float _2478 = frac(_2467 * 0.109899997711181640625f);
        float _2483 = dot(float4(_2475, _2476, _2477, _2478), float4(_2478 + 33.3300018310546875f, _2477 + 33.3300018310546875f, _2475 + 33.3300018310546875f, _2476 + 33.3300018310546875f));
        float _2486 = _2483 + _2475;
        float _2487 = _2483 + _2476;
        float _2488 = _2483 + _2477;
        float _2489 = _2483 + _2478;
        float _2498 = frac((_2486 + _2487) * _2488);
        float _2499 = frac((_2486 + _2488) * _2487);
        float _2500 = frac((_2487 + _2488) * _2489);
        bool _2519 = frac((_2488 + _2489) * _2486) > 0.5f;
        _2450 = (_2519 ? _2498 : 1.0f) * _2449;
        _2452 = (_2519 ? _2499 : 1.0f) * _2451;
        _2454 = (_2519 ? _2500 : 1.0f) * _2453;
        uint _2462 = _2461 + 1u;
        if (_2462 == 15u) {
          break;
        } else {
          _2449 = _2450;
          _2451 = _2452;
          _2453 = _2454;
          _2455 = (((_2500 * 0.20000000298023223876953125f) * (frac(_2464) - _2459)) * frac(floor(((cb0[0u].x * 0.1500000059604644775390625f) + 300.0f) / _2498) * _2498)) + _2455;
          _2457 = ((_2500 * _2499) * (frac(_2465) - _2459)) + _2457;
          _2459 *= (-2.0f);
          _2461 = _2462;
        }
      }
      float _2537 = floor((cb0[0u].x * 2.0f) + cb6[0u].y);
      float _2538 = _2537 * 0.00999999977648258209228515625f;
      float _2548 = ((_2538 + 1.0f) - (floor(_2537 * 9.9999997473787516355514526367188e-05f) * 100.0f)) * 0.00999999977648258209228515625f;
      float _2549 = ((_2537 + 1.0f) - (floor(_2538) * 100.0f)) * 0.00999999977648258209228515625f;
      float _2554 = 0.5f - (cb6[0u].y * 0.375f);
      float _2555 = (cb6[0u].y * 0.75f) + (-0.100000001490116119384765625f);
      float _2558 = frac((((floor(_1088 * 10.0f) * 0.100000001490116119384765625f) + 0.0500000007450580596923828125f) + _2548) * 0.103100001811981201171875f);
      float _2559 = frac((((floor(_1089 * 33.33333587646484375f) * 0.02999999932944774627685546875f) + 0.014999999664723873138427734375f) + _2549) * 0.103100001811981201171875f);
      float _2561 = _2558 + 33.3300018310546875f;
      float _2562 = dot(float3(_2558, _2559, _2558), float3(_2559 + 33.3300018310546875f, _2561, _2561));
      float _2570 = frac(((_2559 + _2558) + (_2562 * 2.0f)) * (_2562 + _2558));
      float _2573 = ((1.0f - _2570) * _2555) + _2570;
      float _2594 = frac((((floor(_1088 * 11.111110687255859375f) * 0.0900000035762786865234375f) + 0.04500000178813934326171875f) + _2548) * 0.103100001811981201171875f);
      float _2595 = frac((((floor(_1089 * 25.0f) * 0.039999999105930328369140625f) + 0.0199999995529651641845703125f) + _2549) * 0.103100001811981201171875f);
      float _2597 = _2594 + 33.3300018310546875f;
      float _2598 = dot(float3(_2594, _2595, _2594), float3(_2595 + 33.3300018310546875f, _2597, _2597));
      float _2606 = frac(((_2595 + _2594) + (_2598 * 2.0f)) * (_2598 + _2594));
      float _2609 = ((1.0f - _2606) * _2555) + _2606;
      float _2613 = max(0.0f, _2450);
      float _2614 = max(0.0f, _2452);
      float _2615 = max(0.0f, _2454);
      float _2617 = max(_2613, max(_2614, _2615));
      float _2618 = _2617 * _2617;
      float _2619 = _2613 * 2.0f;
      float _2620 = _2614 * 0.100000001490116119384765625f;
      float _2621 = _2615 * 0.25f;
      float _2629 = clamp((round(_2573 - (_2573 * _2554)) * 5.0f) * round(_2609 - (_2609 * _2554)), 0.0f, 1.0f) * 3.0f;
      frontier_phi_1_57_ladder = (((_2620 - _105) + (_2618 * _2620)) * _2629) + _105;
      frontier_phi_1_57_ladder_1 = (((_2621 - _108) + (_2618 * _2621)) * _2629) + _108;
      frontier_phi_1_57_ladder_2 = (((_2619 - _102) + (_2618 * _2619)) * _2629) + _102;
    } else {
      frontier_phi_1_57_ladder = _105;
      frontier_phi_1_57_ladder_1 = _108;
      frontier_phi_1_57_ladder_2 = _102;
    }
    _99 = frontier_phi_1_57_ladder_2;
    _103 = frontier_phi_1_57_ladder;
    _106 = frontier_phi_1_57_ladder_1;
  }
  bool _115 = asuint(cb6[15u]).x == 0u;
  float _290;
  float _293;
  float _295;
  if (_115) {
    _290 = _291;
    _293 = _291;
    _295 = _291;
  } else {
    float4 _302 = _8.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
    float _305 = _302.x;
    float _306 = _302.y;
    float _307 = _302.z;
    float _772;
    float _773;
    float _774;
    if (cb6[12u].x > 0.0f) {
      float4 _613 = _14.Load(int3(uint2(gl_GlobalInvocationID.x & 255u, gl_GlobalInvocationID.y & 255u), 0u));

      // Custom: Replace Film Grain
      if (injectedData.fxFilmGrain) {
        float3 grainedColor = renodx::effects::ApplyFilmGrain(
            float3(_305, _306, _307),
            _613.xy,
            frac(cb0[0u].x / 1000.f),
            injectedData.fxFilmGrain * 0.03f,
            (cb6[12u].y == 1.f) ? 1.f : (203.f / 100.f));
        _772 = grainedColor.r;
        _773 = grainedColor.g;
        _774 = grainedColor.b;
      } else {
        uint _609 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * _70), uint(cb12[79u].y * _71)), 0u)).y & 31u);
        float _615 = _613.x;
        float _616 = _613.y;
        float _617 = _613.z;
        float _620 = ((_615 + _616) + _617) * 0.3333333432674407958984375f;
        float _622 = cb6[12u].x * _305;
        float _623 = cb6[12u].x * _306;
        float _624 = cb6[12u].x * _307;
        float _639 = _615 - _620;
        float _640 = _616 - _620;
        float _641 = _617 - _620;
        float _645 = _620 + (-0.5f);
        uint4 _658 = asuint(cb6[17u]);
        float _662 = float(min((_658.x & _609), 1u));
        float _691 = float(min((_658.y & _609), 1u));
        float _720 = float(min((_658.z & _609), 1u));
        float _749 = float(min((_658.w & _609), 1u));
        float _756 = (((((((_645 + (cb6[18u].w * _639)) * cb6[18u].x) * _662) + 1.0f) * (_622 / max(1.0f - _622, 9.9999999747524270787835121154785e-07f))) * ((((_645 + (cb6[19u].w * _639)) * cb6[19u].x) * _691) + 1.0f)) * ((((_645 + (cb6[20u].w * _639)) * cb6[20u].x) * _720) + 1.0f)) * ((((_645 + (cb6[21u].w * _639)) * cb6[21u].x) * _749) + 1.0f);
        float _757 = (((((((_645 + (cb6[18u].w * _640)) * cb6[18u].y) * _662) + 1.0f) * (_623 / max(1.0f - _623, 9.9999999747524270787835121154785e-07f))) * ((((_645 + (cb6[19u].w * _640)) * cb6[19u].y) * _691) + 1.0f)) * ((((_645 + (cb6[20u].w * _640)) * cb6[20u].y) * _720) + 1.0f)) * ((((_645 + (cb6[21u].w * _640)) * cb6[21u].y) * _749) + 1.0f);
        float _758 = (((((((_645 + (cb6[18u].w * _641)) * cb6[18u].z) * _662) + 1.0f) * (_624 / max(1.0f - _624, 9.9999999747524270787835121154785e-07f))) * ((((_645 + (cb6[19u].w * _641)) * cb6[19u].z) * _691) + 1.0f)) * ((((_645 + (cb6[20u].w * _641)) * cb6[20u].z) * _720) + 1.0f)) * ((((_645 + (cb6[21u].w * _641)) * cb6[21u].z) * _749) + 1.0f);
        _772 = cb6[12u].y * (_756 / max(_756 + 1.0f, 1.0f));
        _773 = cb6[12u].y * (_757 / max(_757 + 1.0f, 1.0f));
        _774 = cb6[12u].y * (_758 / max(_758 + 1.0f, 1.0f));
      }
    } else {
      _772 = _305;
      _773 = _306;
      _774 = _307;
    }
    float frontier_phi_3_10_ladder;
    float frontier_phi_3_10_ladder_1;
    float frontier_phi_3_10_ladder_2;
    if (_98) {
      frontier_phi_3_10_ladder = 0.0f;
      frontier_phi_3_10_ladder_1 = 0.0f;
      frontier_phi_3_10_ladder_2 = 0.0f;
    } else {
      float4 _1181 = _16.SampleLevel(_45, float2(_81, _82), 0.0f);
      float4 _1188 = _15.SampleLevel(_45, float2(_81, _82), 0.0f);
      float _1193 = _1188.w;
      float _1194 = 1.0f - _1193;
      float _1199 = (_1194 * _1181.w) + _1193;
      frontier_phi_3_10_ladder = ((_1199 * ((_1188.z - _774) + (_1194 * _1181.z))) + _774) * cb6[1u].z;
      frontier_phi_3_10_ladder_1 = ((_1199 * ((_1188.y - _773) + (_1194 * _1181.y))) + _773) * cb6[1u].z;
      frontier_phi_3_10_ladder_2 = ((_1199 * ((_1188.x - _772) + (_1194 * _1181.x))) + _772) * cb6[1u].z;
    }
    _290 = frontier_phi_3_10_ladder_2;
    _293 = frontier_phi_3_10_ladder_1;
    _295 = frontier_phi_3_10_ladder;
  }
  float _583;
  float _585;
  float _587;
  if (cb6[14u].w > 0.0f) {
    uint4 _571 = asuint(cb6[10u]);
    uint _572 = _571.x;
    uint _574 = _571.z;
    uint _577 = _571.y;
    uint _580 = _571.w;
    float frontier_phi_8_7_ladder;
    float frontier_phi_8_7_ladder_1;
    float frontier_phi_8_7_ladder_2;
    if ((((gl_GlobalInvocationID.x >= _572) && (gl_GlobalInvocationID.x < _574)) && (gl_GlobalInvocationID.y >= _577)) && (gl_GlobalInvocationID.y < _580)) {
      float4 _1129 = _23.SampleLevel(_45, float2((cb6[11u].z * ((_70 - float(int(_572))) / float(int(_574 - _572)))) + cb6[11u].x, (cb6[11u].w * ((_71 - float(int(_577))) / float(int(_580 - _577)))) + cb6[11u].y), 0.0f);
      frontier_phi_8_7_ladder = _1129.y * cb6[14u].w;
      frontier_phi_8_7_ladder_1 = _1129.x * cb6[14u].w;
      frontier_phi_8_7_ladder_2 = _1129.z * cb6[14u].w;
    } else {
      frontier_phi_8_7_ladder = _103;
      frontier_phi_8_7_ladder_1 = _99;
      frontier_phi_8_7_ladder_2 = _106;
    }
    _583 = frontier_phi_8_7_ladder_1;
    _585 = frontier_phi_8_7_ladder;
    _587 = frontier_phi_8_7_ladder_2;
  } else {
    _583 = _99;
    _585 = _103;
    _587 = _106;
  }

  // Custom: Switch to colormath
  /*
  uint4 _592 = asuint(cb6[13u]);
  float _1135;
  float _1141;
  float _1147;
  if (_592.y == 0u) {
    _1135 = _583;
    _1141 = _585;
    _1147 = _587;
  } else {
    uint _1178 = _592.w;
    float _1516;
    float _1517;
    float _1518;
    if (cb6[14u].z != 1.0f) {
      _1516 = exp2(log2(abs(_583)) * cb6[14u].z);
      _1517 = exp2(log2(abs(_585)) * cb6[14u].z);
      _1518 = exp2(log2(abs(_587)) * cb6[14u].z);
    } else {
      _1516 = _583;
      _1517 = _585;
      _1518 = _587;
    }
    float _1528 = frac(_70 * 211.1488037109375f);
    float _1529 = frac(_71 * 210.944000244140625f);
    float _1530 = frac(cb0[0u].x * 6.227200031280517578125f);
    float _1533 = _1530 + 33.3300018310546875f;
    float _1534 = dot(float3(_1528, _1529, _1530), float3(_1529 + 33.3300018310546875f, _1528 + 33.3300018310546875f, _1533));
    float _1537 = _1534 + _1528;
    float _1538 = _1534 + _1529;
    float _1540 = _1537 + _1538;
    float _1545 = frac(_1540 * (_1534 + _1530));
    float _1546 = frac((_1537 * 2.0f) * _1538);
    float _1547 = frac(_1540 * _1537);
    float _1553 = frac((_70 + 64.0f) * 211.1488037109375f);
    float _1554 = frac((_71 + 64.0f) * 210.944000244140625f);
    float _1557 = dot(float3(_1553, _1554, _1530), float3(_1554 + 33.3300018310546875f, _1553 + 33.3300018310546875f, _1533));
    float _1560 = _1557 + _1553;
    float _1561 = _1557 + _1554;
    float _1563 = _1560 + _1561;
    float _1568 = frac(_1563 * (_1557 + _1530));
    float _1569 = frac((_1560 * 2.0f) * _1561);
    float _1570 = frac(_1563 * _1560);
    float frontier_phi_16_25_ladder;
    float frontier_phi_16_25_ladder_1;
    float frontier_phi_16_25_ladder_2;
    if (_1178 == 0u) {
      float _1706 = (_1516 <= 0.003130800090730190277099609375f) ? (_1516 * 12.9200000762939453125f) : ((exp2(log2(abs(_1516)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1707 = (_1517 <= 0.003130800090730190277099609375f) ? (_1517 * 12.9200000762939453125f) : ((exp2(log2(abs(_1517)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1708 = (_1518 <= 0.003130800090730190277099609375f) ? (_1518 * 12.9200000762939453125f) : ((exp2(log2(abs(_1518)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1709 = _1706 * 510.0f;
      float _1711 = _1707 * 510.0f;
      float _1712 = _1708 * 510.0f;
      frontier_phi_16_25_ladder = (((_1547 + (-0.5f)) + (min(min(1.0f, _1712), 510.0f - _1712) * (_1570 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1708;
      frontier_phi_16_25_ladder_1 = (((_1545 + (-0.5f)) + (min(min(1.0f, _1709), 510.0f - _1709) * (_1568 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1706;
      frontier_phi_16_25_ladder_2 = (((_1546 + (-0.5f)) + (min(min(1.0f, _1711), 510.0f - _1711) * (_1569 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1707;
    } else {
      float frontier_phi_16_25_ladder_33_ladder;
      float frontier_phi_16_25_ladder_33_ladder_1;
      float frontier_phi_16_25_ladder_33_ladder_2;
      if (_1178 == 1u) {
        float _1855 = mad(0.043306000530719757080078125f, _1518, mad(0.329291999340057373046875f, _1517, _1516 * 0.627402007579803466796875f));
        float _1861 = mad(0.011359999887645244598388671875f, _1518, mad(0.9195439815521240234375f, _1517, _1516 * 0.06909500062465667724609375f));
        float _1867 = mad(0.89557802677154541015625f, _1518, mad(0.08802799880504608154296875f, _1517, _1516 * 0.0163940005004405975341796875f));
        float _1903 = exp2(log2(abs((((clamp(mad(_1867, cb6[22u].z, mad(_1861, cb6[22u].y, _1855 * cb6[22u].x)), 0.0f, 1.0f) - _1855) * cb6[16u].x) + _1855) * cb6[14u].x)) * 0.1593017578125f);
        float _1904 = exp2(log2(abs((((clamp(mad(_1867, cb6[23u].z, mad(_1861, cb6[23u].y, _1855 * cb6[23u].x)), 0.0f, 1.0f) - _1861) * cb6[16u].x) + _1861) * cb6[14u].x)) * 0.1593017578125f);
        float _1905 = exp2(log2(abs((((clamp(mad(_1867, cb6[24u].z, mad(_1861, cb6[24u].y, _1855 * cb6[24u].x)), 0.0f, 1.0f) - _1867) * cb6[16u].x) + _1867) * cb6[14u].x)) * 0.1593017578125f);
        frontier_phi_16_25_ladder_33_ladder = exp2(log2(abs(((_1905 * 18.8515625f) + 0.8359375f) / ((_1905 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_16_25_ladder_33_ladder_1 = exp2(log2(abs(((_1903 * 18.8515625f) + 0.8359375f) / ((_1903 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_16_25_ladder_33_ladder_2 = exp2(log2(abs(((_1904 * 18.8515625f) + 0.8359375f) / ((_1904 * 18.6875f) + 1.0f))) * 78.84375f);
      } else {
        float frontier_phi_16_25_ladder_33_ladder_41_ladder;
        float frontier_phi_16_25_ladder_33_ladder_41_ladder_1;
        float frontier_phi_16_25_ladder_33_ladder_41_ladder_2;
        if (_1178 == 2u) {
          frontier_phi_16_25_ladder_33_ladder_41_ladder = _1518 * cb6[14u].x;
          frontier_phi_16_25_ladder_33_ladder_41_ladder_1 = _1516 * cb6[14u].x;
          frontier_phi_16_25_ladder_33_ladder_41_ladder_2 = _1517 * cb6[14u].x;
        } else {
          float frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder;
          float frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_1;
          float frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_2;
          if (_1178 == 3u) {
            float _2163 = mad(_1518, cb6[22u].z, mad(_1517, cb6[22u].y, _1516 * cb6[22u].x)) * cb6[14u].x;
            float _2164 = mad(_1518, cb6[23u].z, mad(_1517, cb6[23u].y, _1516 * cb6[23u].x)) * cb6[14u].x;
            float _2165 = mad(_1518, cb6[24u].z, mad(_1517, cb6[24u].y, _1516 * cb6[24u].x)) * cb6[14u].x;
            float _2190 = (_2163 <= 0.003130800090730190277099609375f) ? (_2163 * 12.9200000762939453125f) : ((exp2(log2(abs(_2163)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2191 = (_2164 <= 0.003130800090730190277099609375f) ? (_2164 * 12.9200000762939453125f) : ((exp2(log2(abs(_2164)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2192 = (_2165 <= 0.003130800090730190277099609375f) ? (_2165 * 12.9200000762939453125f) : ((exp2(log2(abs(_2165)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2193 = _2190 * 2046.0f;
            float _2195 = _2191 * 2046.0f;
            float _2196 = _2192 * 2046.0f;
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder = (((_1547 + (-0.5f)) + (min(min(1.0f, _2196), 2046.0f - _2196) * (_1570 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2192;
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_1 = (((_1545 + (-0.5f)) + (min(min(1.0f, _2193), 2046.0f - _2193) * (_1568 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2190;
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_2 = (((_1546 + (-0.5f)) + (min(min(1.0f, _2195), 2046.0f - _2195) * (_1569 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2191;
          } else {
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder = (_1518 * cb6[14u].x) + cb6[14u].y;
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_1 = (_1516 * cb6[14u].x) + cb6[14u].y;
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_2 = (_1517 * cb6[14u].x) + cb6[14u].y;
          }
          frontier_phi_16_25_ladder_33_ladder_41_ladder = frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder;
          frontier_phi_16_25_ladder_33_ladder_41_ladder_1 = frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_1;
          frontier_phi_16_25_ladder_33_ladder_41_ladder_2 = frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_2;
        }
        frontier_phi_16_25_ladder_33_ladder = frontier_phi_16_25_ladder_33_ladder_41_ladder;
        frontier_phi_16_25_ladder_33_ladder_1 = frontier_phi_16_25_ladder_33_ladder_41_ladder_1;
        frontier_phi_16_25_ladder_33_ladder_2 = frontier_phi_16_25_ladder_33_ladder_41_ladder_2;
      }
      frontier_phi_16_25_ladder = frontier_phi_16_25_ladder_33_ladder;
      frontier_phi_16_25_ladder_1 = frontier_phi_16_25_ladder_33_ladder_1;
      frontier_phi_16_25_ladder_2 = frontier_phi_16_25_ladder_33_ladder_2;
    }
    _1135 = frontier_phi_16_25_ladder_1;
    _1141 = frontier_phi_16_25_ladder_2;
    _1147 = frontier_phi_16_25_ladder;
  }
  float _1451;
  float _1457;
  float _1463;
  if (_115) {
    _1451 = _290;
    _1457 = _293;
    _1463 = _295;
  } else {
    uint _1502 = _592.w;
    float _1625;
    float _1626;
    float _1627;
    if (cb6[15u].w != 1.0f) {
      _1625 = exp2(log2(abs(_290)) * cb6[15u].w);
      _1626 = exp2(log2(abs(_293)) * cb6[15u].w);
      _1627 = exp2(log2(abs(_295)) * cb6[15u].w);
    } else {
      _1625 = _290;
      _1626 = _293;
      _1627 = _295;
    }
    float _1634 = frac(_70 * 211.1488037109375f);
    float _1635 = frac(_71 * 210.944000244140625f);
    float _1636 = frac(cb0[0u].x * 6.227200031280517578125f);
    float _1639 = _1636 + 33.3300018310546875f;
    float _1640 = dot(float3(_1634, _1635, _1636), float3(_1635 + 33.3300018310546875f, _1634 + 33.3300018310546875f, _1639));
    float _1643 = _1640 + _1634;
    float _1644 = _1640 + _1635;
    float _1646 = _1643 + _1644;
    float _1651 = frac(_1646 * (_1640 + _1636));
    float _1652 = frac((_1643 * 2.0f) * _1644);
    float _1653 = frac(_1646 * _1643);
    float _1658 = frac((_70 + 64.0f) * 211.1488037109375f);
    float _1659 = frac((_71 + 64.0f) * 210.944000244140625f);
    float _1662 = dot(float3(_1658, _1659, _1636), float3(_1659 + 33.3300018310546875f, _1658 + 33.3300018310546875f, _1639));
    float _1665 = _1662 + _1658;
    float _1666 = _1662 + _1659;
    float _1668 = _1665 + _1666;
    float _1673 = frac(_1668 * (_1662 + _1636));
    float _1674 = frac((_1665 * 2.0f) * _1666);
    float _1675 = frac(_1668 * _1665);
    float frontier_phi_22_31_ladder;
    float frontier_phi_22_31_ladder_1;
    float frontier_phi_22_31_ladder_2;
    if (_1502 == 0u) {
      float _1820 = (_1625 <= 0.003130800090730190277099609375f) ? (_1625 * 12.9200000762939453125f) : ((exp2(log2(abs(_1625)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1821 = (_1626 <= 0.003130800090730190277099609375f) ? (_1626 * 12.9200000762939453125f) : ((exp2(log2(abs(_1626)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1822 = (_1627 <= 0.003130800090730190277099609375f) ? (_1627 * 12.9200000762939453125f) : ((exp2(log2(abs(_1627)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1823 = _1820 * 510.0f;
      float _1824 = _1821 * 510.0f;
      float _1825 = _1822 * 510.0f;
      frontier_phi_22_31_ladder = (((_1651 + (-0.5f)) + (min(min(1.0f, _1823), 510.0f - _1823) * (_1673 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1820;
      frontier_phi_22_31_ladder_1 = (((_1653 + (-0.5f)) + (min(min(1.0f, _1825), 510.0f - _1825) * (_1675 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1822;
      frontier_phi_22_31_ladder_2 = (((_1652 + (-0.5f)) + (min(min(1.0f, _1824), 510.0f - _1824) * (_1674 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1821;
    } else {
      float frontier_phi_22_31_ladder_39_ladder;
      float frontier_phi_22_31_ladder_39_ladder_1;
      float frontier_phi_22_31_ladder_39_ladder_2;
      if (_1502 == 1u) {
        float _1980 = mad(0.043306000530719757080078125f, _1627, mad(0.329291999340057373046875f, _1626, _1625 * 0.627402007579803466796875f));
        float _1983 = mad(0.011359999887645244598388671875f, _1627, mad(0.9195439815521240234375f, _1626, _1625 * 0.06909500062465667724609375f));
        float _1986 = mad(0.89557802677154541015625f, _1627, mad(0.08802799880504608154296875f, _1626, _1625 * 0.0163940005004405975341796875f));
        float _2020 = exp2(log2(abs((((clamp(mad(_1986, cb6[26u].z, mad(_1983, cb6[26u].y, _1980 * cb6[26u].x)), 0.0f, 1.0f) - _1980) * cb6[16u].x) + _1980) * cb6[15u].y)) * 0.1593017578125f);
        float _2021 = exp2(log2(abs((((clamp(mad(_1986, cb6[27u].z, mad(_1983, cb6[27u].y, _1980 * cb6[27u].x)), 0.0f, 1.0f) - _1983) * cb6[16u].x) + _1983) * cb6[15u].y)) * 0.1593017578125f);
        float _2022 = exp2(log2(abs((((clamp(mad(_1986, cb6[28u].z, mad(_1983, cb6[28u].y, _1980 * cb6[28u].x)), 0.0f, 1.0f) - _1986) * cb6[16u].x) + _1986) * cb6[15u].y)) * 0.1593017578125f);
        frontier_phi_22_31_ladder_39_ladder = exp2(log2(abs(((_2020 * 18.8515625f) + 0.8359375f) / ((_2020 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_22_31_ladder_39_ladder_1 = exp2(log2(abs(((_2022 * 18.8515625f) + 0.8359375f) / ((_2022 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_22_31_ladder_39_ladder_2 = exp2(log2(abs(((_2021 * 18.8515625f) + 0.8359375f) / ((_2021 * 18.6875f) + 1.0f))) * 78.84375f);
      } else {
        float frontier_phi_22_31_ladder_39_ladder_45_ladder;
        float frontier_phi_22_31_ladder_39_ladder_45_ladder_1;
        float frontier_phi_22_31_ladder_39_ladder_45_ladder_2;
        if (_1502 == 2u) {
          frontier_phi_22_31_ladder_39_ladder_45_ladder = _1625 * cb6[15u].y;
          frontier_phi_22_31_ladder_39_ladder_45_ladder_1 = _1627 * cb6[15u].y;
          frontier_phi_22_31_ladder_39_ladder_45_ladder_2 = _1626 * cb6[15u].y;
        } else {
          float frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder;
          float frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_1;
          float frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_2;
          if (_1502 == 3u) {
            float _2381 = mad(_1627, cb6[26u].z, mad(_1626, cb6[26u].y, _1625 * cb6[26u].x)) * cb6[15u].y;
            float _2382 = mad(_1627, cb6[27u].z, mad(_1626, cb6[27u].y, _1625 * cb6[27u].x)) * cb6[15u].y;
            float _2383 = mad(_1627, cb6[28u].z, mad(_1626, cb6[28u].y, _1625 * cb6[28u].x)) * cb6[15u].y;
            float _2408 = (_2381 <= 0.003130800090730190277099609375f) ? (_2381 * 12.9200000762939453125f) : ((exp2(log2(abs(_2381)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2409 = (_2382 <= 0.003130800090730190277099609375f) ? (_2382 * 12.9200000762939453125f) : ((exp2(log2(abs(_2382)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2410 = (_2383 <= 0.003130800090730190277099609375f) ? (_2383 * 12.9200000762939453125f) : ((exp2(log2(abs(_2383)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2411 = _2408 * 2046.0f;
            float _2412 = _2409 * 2046.0f;
            float _2413 = _2410 * 2046.0f;
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder = (((_1651 + (-0.5f)) + (min(min(1.0f, _2411), 2046.0f - _2411) * (_1673 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2408;
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_1 = (((_1653 + (-0.5f)) + (min(min(1.0f, _2413), 2046.0f - _2413) * (_1675 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2410;
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_2 = (((_1652 + (-0.5f)) + (min(min(1.0f, _2412), 2046.0f - _2412) * (_1674 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2409;
          } else {
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder = (_1625 * cb6[15u].y) + cb6[15u].z;
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_1 = (_1627 * cb6[15u].y) + cb6[15u].z;
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_2 = (_1626 * cb6[15u].y) + cb6[15u].z;
          }
          frontier_phi_22_31_ladder_39_ladder_45_ladder = frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder;
          frontier_phi_22_31_ladder_39_ladder_45_ladder_1 = frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_1;
          frontier_phi_22_31_ladder_39_ladder_45_ladder_2 = frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_2;
        }
        frontier_phi_22_31_ladder_39_ladder = frontier_phi_22_31_ladder_39_ladder_45_ladder;
        frontier_phi_22_31_ladder_39_ladder_1 = frontier_phi_22_31_ladder_39_ladder_45_ladder_1;
        frontier_phi_22_31_ladder_39_ladder_2 = frontier_phi_22_31_ladder_39_ladder_45_ladder_2;
      }
      frontier_phi_22_31_ladder = frontier_phi_22_31_ladder_39_ladder;
      frontier_phi_22_31_ladder_1 = frontier_phi_22_31_ladder_39_ladder_1;
      frontier_phi_22_31_ladder_2 = frontier_phi_22_31_ladder_39_ladder_2;
    }
    _1451 = frontier_phi_22_31_ladder;
    _1457 = frontier_phi_22_31_ladder_2;
    _1463 = frontier_phi_22_31_ladder_1;
  }
  _26[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(_1135, _1141, _1147, 1.0f);
  if (!(asuint(cb6[15u]).x == 0u)) {
    _27[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(_1451, _1457, _1463, 1.0f);
  }
  */
  uint outputTypeEnum = asuint(cb6[13u].w);

  float3 outputColor1 = float3(_583, _585, _587);
  if (asuint(cb6[13u].y) != 0u) {
    ConvertColorParams params = {
      outputTypeEnum,  // outputTypeEnum
      cb6[14u].x,      // paperWhiteScaling
      cb6[14u].y,      // blackFloorAdjust
      cb6[14u].z,      // gammaCorrection
      cb6[16u].x,      // pqSaturation
      float3x3(
          cb6[22u].x, cb6[22u].y, cb6[22u].z,
          cb6[23u].x, cb6[23u].y, cb6[23u].z,
          cb6[24u].x, cb6[24u].y, cb6[24u].z),                             // pqMatrix
      float3(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y, cb0[0u].x)  // random3
    };
    outputColor1 = convertColor(outputColor1, params);
  }

  _26[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(outputColor1.rgb, 1.0f);

  if (asuint(cb6[15u]).x != 0u) {
    float3 outputColor2 = float3(_290, _293, _295);
    ConvertColorParams params = {
      outputTypeEnum,  // outputTypeEnum
      cb6[15u].y,      // paperWhiteScaling
      cb6[15u].z,      // blackFloorAdjust
      cb6[15u].w,      // gammaCorrection
      cb6[16u].x,      // pqSaturation
      float3x3(
          cb6[26u].x, cb6[26u].y, cb6[26u].z,
          cb6[27u].x, cb6[27u].y, cb6[27u].z,
          cb6[28u].x, cb6[28u].y, cb6[28u].z),                             // pqMatrix
      float3(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y, cb0[0u].x)  // random3
    };

    outputColor2 = convertColor(outputColor2, params);
    _27[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(outputColor2.rgb, 1.0f);
  }
}

[numthreads(16, 16, 1)]
void main(SPIRV_Cross_Input stage_input) {
  gl_GlobalInvocationID = stage_input.gl_GlobalInvocationID;
  comp_main();
}

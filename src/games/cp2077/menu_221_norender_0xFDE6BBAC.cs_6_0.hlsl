// menu (no render)

#include "./colormath.hlsl"
#include "./cp2077.h"
#include "./injectedBuffer.hlsl"

static float _293;

cbuffer _32_34 : register(b0, space0) {
  float4 cb0[30] : packoffset(c0);
};

cbuffer _41_43 : register(b6, space0) {
  float4 cb6[30] : packoffset(c0);
};

cbuffer _37_39 : register(b12, space0) {
  float4 cb12[99] : packoffset(c0);
};

Texture2D<float4> _8 : register(t32, space0);
Texture2D<uint4> _12 : register(t51, space0);
Texture2D<float4> _13 : register(t0, space0);
Texture2D<float4> _14 : register(t1, space0);
Texture2D<float4> _15 : register(t2, space0);
Texture2D<float4> _16 : register(t3, space0);
Texture2D<float4> _17 : register(t4, space0);
Texture2D<float4> _18 : register(t5, space0);
Texture2D<float4> _19 : register(t6, space0);
Texture2D<float4> _20 : register(t8, space0);
Buffer<uint4> _23 : register(t9, space0);
Texture2D<float4> _24 : register(t10, space0);
RWTexture2D<float4> _27 : register(u0, space0);
RWTexture2D<float4> _28 : register(u1, space0);
SamplerState _46 : register(s0, space0);

static uint3 gl_GlobalInvocationID;
struct SPIRV_Cross_Input {
  uint3 gl_GlobalInvocationID : SV_DispatchThreadID;
};

void comp_main() {
  float _72 = float(gl_GlobalInvocationID.x);
  float _73 = float(gl_GlobalInvocationID.y);
  float _83 = (_72 + 0.5f) / cb6[12u].z;
  float _84 = (_73 + 0.5f) / cb6[12u].w;
  bool _100 = ((_83 < cb6[9u].y) || (_84 < cb6[9u].z)) || (((1.0f - cb6[9u].y) < _83) || ((1.0f - cb6[9u].z) < _84));
  float _101;
  float _105;
  float _108;
  if (_100) {
    _101 = 0.0f;
    _105 = 0.0f;
    _108 = 0.0f;
  } else {
    bool _121 = cb6[0u].x > 0.0f;
    float _123 = _83 + (-0.5f);
    float _125 = _84 + (-0.5f);
    float _129 = cb6[0u].y + 0.119999997317790985107421875f;
    float _133 = max(_129 + abs(_123), 0.0f);
    float _134 = max(_129 + abs(_125), 0.0f);
    float _141 = clamp(sqrt((_134 * _134) + (_133 * _133)) * 20.0f, 0.0f, 1.0f);
    float _148 = ((_141 * _141) * cb6[0u].x) * (3.0f - (_141 * 2.0f));
    float _149 = _148 * 0.699999988079071044921875f;
    float _152 = ceil(_149) - _149;
    float _155 = (_152 * 50.0f) + 1.0f;
    float _164 = (((cos(cb0[0u].x) * 2.0f) + 200.0f) * _152) + 1.0f;
    float _176 = frac(floor(_155 * _83) * 0.103100001811981201171875f);
    float _177 = frac(floor(_164 * _84) * 0.103100001811981201171875f);
    float _178 = _177 + 33.3300018310546875f;
    float _180 = _176 + 33.3300018310546875f;
    float _181 = dot(float3(_176, _177, _176), float3(_178, _180, _180));
    float _187 = _177 + _176;
    float _190 = frac((_187 + (_181 * 2.0f)) * (_181 + _176));
    float _215 = abs(sin((_148 * 0.1680000126361846923828125f) * cb0[0u].x));
    float _220 = (_148 * 0.14000000059604644775390625f) + 1.0f;
    float _226 = dot(float3(_177, _176, _177), float3(_180, _178, _178));
    float _239 = (floor(frac(frac((_187 + (_226 * 2.0f)) * (_226 + _177)) + _215) * _220) * (1.0f / (((cos(frac(_190 + abs(sin(cb0[0u].x * 5000.0f))) * cb0[0u].x) * 0.0199999995529651641845703125f) + 1.0f) * _164))) + _84;
    float _241 = _239 * cb6[12u].w;
    float _250 = frac(round((_148 * 0.125f) * _241) * 0.103100001811981201171875f);
    float _251 = frac((_148 * 2.0620000362396240234375f) * cb0[0u].x);
    float _252 = _251 + 33.3300018310546875f;
    float _253 = _250 + 33.3300018310546875f;
    float _254 = dot(float3(_250, _251, _250), float3(_252, _253, _253));
    float _268 = frac(round((_148 * 0.012500000186264514923095703125f) * _241) * 0.103100001811981201171875f);
    float _269 = _268 + 33.3300018310546875f;
    float _270 = dot(float3(_268, _251, _268), float3(_252, _269, _269));
    float _287 = _121 ? ((((cb6[12u].z * ((floor(frac(_190 + _215) * _220) * (1.0f / (((sin(frac(_190 + abs(sin(cb0[0u].x * 100.0f))) * cb0[0u].x) * 0.0199999995529651641845703125f) + 1.0f) * _155))) + _83)) + 2.0f) + ((((_148 * _148) * 960.0f) * frac(((_251 + _250) + (_254 * 2.0f)) * (_254 + _250))) * frac(((_251 + _268) + (_270 * 2.0f)) * (_270 + _268)))) / cb6[12u].z) : _83;
    float _288 = _121 ? _239 : _84;
    bool _289 = cb6[0u].y > 0.0f;
    bool _291 = cb6[12u].x > 0.0f;
    float _1110;
    float _1111;
    float _1112;
    float _1114;
    float _1116;
    if (_289) {
      float _319 = floor(_287 * 2.5f) * 0.4000000059604644775390625f;
      float _321 = floor(_288 * 10.0f) * 0.100000001490116119384765625f;
      float _323 = _319 + 0.20000000298023223876953125f;
      float _325 = _321 + 0.0500000007450580596923828125f;
      float _329 = floor((cb0[0u].x * 2.0f) + (cb6[0u].y * 20.0f));
      float _330 = _329 * 0.00999999977648258209228515625f;
      float _344 = _323 + (((_330 + 1.0f) - (floor(_329 * 9.9999997473787516355514526367188e-05f) * 100.0f)) * 0.00999999977648258209228515625f);
      float _345 = _325 + (((_329 + 1.0f) - (floor(_330) * 100.0f)) * 0.00999999977648258209228515625f);
      float _355 = frac(_344 * 0.103100001811981201171875f);
      float _356 = frac(_345 * 0.103100001811981201171875f);
      float _358 = _355 + 33.3300018310546875f;
      float _359 = dot(float3(_355, _356, _355), float3(_356 + 33.3300018310546875f, _358, _358));
      float _367 = frac(((_356 + _355) + (_359 * 2.0f)) * (_359 + _355));
      float _370 = ((1.0f - _367) * ((cb6[0u].y * 0.75f) + (-0.100000001490116119384765625f))) + _367;
      float _373 = round(_370 - (_370 * (0.5f - (cb6[0u].y * 0.375f))));
      float _374 = _373 * _373;
      float _375 = _287 - _323;
      float _376 = _288 - _325;
      float _377 = _323 * _344;
      float _378 = _325 * _345;
      float _383 = (_319 + 0.300000011920928955078125f) * _344;
      float _384 = (_321 + 0.1500000059604644775390625f) * _345;
      float _387 = frac(_377 * 0.103100001811981201171875f);
      float _388 = frac(_378 * 0.103100001811981201171875f);
      float _390 = _387 + 33.3300018310546875f;
      float _391 = dot(float3(_387, _388, _387), float3(_388 + 33.3300018310546875f, _390, _390));
      float _404 = frac((_377 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _405 = frac((_378 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _407 = _404 + 33.3300018310546875f;
      float _408 = dot(float3(_404, _405, _404), float3(_405 + 33.3300018310546875f, _407, _407));
      float _422 = floor(frac(((_388 + _387) + (_391 * 2.0f)) * (_391 + _387)) * 3.25f) * 0.100000001490116119384765625f;
      float _423 = floor(frac(((_405 + _404) + (_408 * 2.0f)) * (_408 + _404)) * 3.25f) * 0.02500000037252902984619140625f;
      float _425 = _422 + (-0.20000000298023223876953125f);
      float _427 = _423 + (-0.0500000007450580596923828125f);
      float _431 = frac(_383 * 0.103100001811981201171875f);
      float _432 = frac(_384 * 0.103100001811981201171875f);
      float _434 = _431 + 33.3300018310546875f;
      float _435 = dot(float3(_431, _432, _431), float3(_432 + 33.3300018310546875f, _434, _434));
      float _448 = frac((_383 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _449 = frac((_384 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _451 = _448 + 33.3300018310546875f;
      float _452 = dot(float3(_448, _449, _448), float3(_449 + 33.3300018310546875f, _451, _451));
      float _465 = floor(frac(((_432 + _431) + (_435 * 2.0f)) * (_435 + _431)) * 3.25f) * 0.100000001490116119384765625f;
      float _466 = floor(frac(((_449 + _448) + (_452 * 2.0f)) * (_452 + _448)) * 3.25f) * 0.02500000037252902984619140625f;
      float _467 = _465 + (-0.20000000298023223876953125f);
      float _468 = _466 + (-0.0500000007450580596923828125f);
      float _471 = _375 - _425;
      float _472 = _376 - _427;
      float _482 = (-0.0250000059604644775390625f) - _375;
      float _484 = _482 + _422;
      float _485 = (-0.006250001490116119384765625f) - _376;
      float _487 = _485 + _423;
      uint _502 = (((((uint(_484 > 0.0f) + ((_484 < 0.0f) ? 4294967295u : 0u)) + ((_471 < 0.0f) ? 4294967295u : 0u)) + uint(_471 > 0.0f)) + ((_472 < 0.0f) ? 4294967295u : 0u)) + uint(_472 > 0.0f)) + (uint(_487 > 0.0f) - uint(_487 < 0.0f));
      float _510 = min(float(int(uint(int(_502) > int(3u)) - uint(int(_502) < int(3u)))), 0.0f);
      float _515 = _375 - _467;
      float _516 = _376 - _468;
      float _525 = _482 + _465;
      float _526 = _485 + _466;
      uint _541 = (((((uint(_525 > 0.0f) + ((_525 < 0.0f) ? 4294967295u : 0u)) + ((_515 < 0.0f) ? 4294967295u : 0u)) + uint(_515 > 0.0f)) + ((_516 < 0.0f) ? 4294967295u : 0u)) + uint(_516 > 0.0f)) + (uint(_526 > 0.0f) - uint(_526 < 0.0f));
      float _548 = min(float(int(uint(int(_541) > int(3u)) - uint(int(_541) < int(3u)))), 0.0f);
      float _555 = _287 + ((_374 * (((_425 - _467) * _548) + ((_467 - _425) * _510))) * 1.2000000476837158203125f);
      float _559 = _288 + ((_374 * (((_427 - _468) * _548) + ((_468 - _427) * _510))) * 1.2000000476837158203125f);
      uint _560 = uint(_83);
      uint _561 = uint(_84);
      float _568 = _8.Load(int3(uint2(_560, _561), 0u)).y - _17.Load(int3(uint2(_560, _561), 0u)).y;
      float _884;
      if (_291) {
        uint _803 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * float(_560)), uint(cb12[79u].y * float(_561))), 0u)).y & 31u);
        float4 _806 = _14.Load(int3(uint2(_560 & 255u, _561 & 255u), 0u));
        float _809 = _806.y;
        float _813 = ((_806.x + _809) + _806.z) * 0.3333333432674407958984375f;
        float _814 = cb6[12u].x * _568;
        float _821 = _809 - _813;
        float _823 = _813 + (-0.5f);
        uint4 _829 = asuint(cb6[17u]);
        float _878 = (((((((_823 + (cb6[18u].w * _821)) * cb6[18u].y) * float(min((_829.x & _803), 1u))) + 1.0f) * (_814 / max(1.0f - _814, 9.9999999747524270787835121154785e-07f))) * ((((_823 + (cb6[19u].w * _821)) * cb6[19u].y) * float(min((_829.y & _803), 1u))) + 1.0f)) * ((((_823 + (cb6[20u].w * _821)) * cb6[20u].y) * float(min((_829.z & _803), 1u))) + 1.0f)) * ((((_823 + (cb6[21u].w * _821)) * cb6[21u].y) * float(min((_829.w & _803), 1u))) + 1.0f);
        _884 = cb6[12u].y * (_878 / max(_878 + 1.0f, 1.0f));
      } else {
        _884 = _568;
      }
      float _886 = _884 * cb6[0u].y;
      float _888 = (_555 + (-0.5f)) + _886;
      float _890 = (0.5f - _559) + _886;
      float _892 = atan(_890 / _888);
      bool _897 = _888 < 0.0f;
      bool _898 = _888 == 0.0f;
      bool _899 = _890 >= 0.0f;
      bool _900 = _890 < 0.0f;
      float _914 = sqrt((_888 * _888) + (_890 * _890));
      float _917 = ((_898 && _899) ? 1.57079637050628662109375f : ((_898 && _900) ? (-1.57079637050628662109375f) : ((_897 && _900) ? (_892 + (-3.1415927410125732421875f)) : ((_897 && _899) ? (_892 + 3.1415927410125732421875f) : _892)))) + clamp(cb6[0u].y * (_884 * 0.5f), 0.0f, 1.0f);
      uint _928 = uint(cb6[12u].z * frac((cos(_917) * _914) + 0.5f));
      uint _929 = uint(cb6[12u].w * frac(0.5f - (sin(_917) * _914)));
      float4 _930 = _8.Load(int3(uint2(_928, _929), 0u));
      float4 _935 = _17.Load(int3(uint2(_928, _929), 0u));
      float _940 = _930.x - _935.x;
      float _941 = _930.y - _935.y;
      float _942 = _930.z - _935.z;
      float frontier_phi_14_12_ladder;
      float frontier_phi_14_12_ladder_1;
      float frontier_phi_14_12_ladder_2;
      float frontier_phi_14_12_ladder_3;
      float frontier_phi_14_12_ladder_4;
      if (_291) {
        uint _1251 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * float(_928)), uint(cb12[79u].y * float(_929))), 0u)).y & 31u);
        float4 _1254 = _14.Load(int3(uint2(_928 & 255u, _929 & 255u), 0u));
        float _1256 = _1254.x;
        float _1257 = _1254.y;
        float _1258 = _1254.z;
        float _1261 = ((_1256 + _1257) + _1258) * 0.3333333432674407958984375f;
        float _1262 = cb6[12u].x * _940;
        float _1263 = cb6[12u].x * _941;
        float _1264 = cb6[12u].x * _942;
        float _1277 = _1256 - _1261;
        float _1278 = _1257 - _1261;
        float _1279 = _1258 - _1261;
        float _1283 = _1261 + (-0.5f);
        uint4 _1295 = asuint(cb6[17u]);
        float _1299 = float(min((_1295.x & _1251), 1u));
        float _1327 = float(min((_1295.y & _1251), 1u));
        float _1355 = float(min((_1295.z & _1251), 1u));
        float _1383 = float(min((_1295.w & _1251), 1u));
        float _1390 = (((((((_1283 + (cb6[18u].w * _1277)) * cb6[18u].x) * _1299) + 1.0f) * (_1262 / max(1.0f - _1262, 9.9999999747524270787835121154785e-07f))) * ((((_1283 + (cb6[19u].w * _1277)) * cb6[19u].x) * _1327) + 1.0f)) * ((((_1283 + (cb6[20u].w * _1277)) * cb6[20u].x) * _1355) + 1.0f)) * ((((_1283 + (cb6[21u].w * _1277)) * cb6[21u].x) * _1383) + 1.0f);
        float _1391 = (((((((_1283 + (cb6[18u].w * _1278)) * cb6[18u].y) * _1299) + 1.0f) * (_1263 / max(1.0f - _1263, 9.9999999747524270787835121154785e-07f))) * ((((_1283 + (cb6[19u].w * _1278)) * cb6[19u].y) * _1327) + 1.0f)) * ((((_1283 + (cb6[20u].w * _1278)) * cb6[20u].y) * _1355) + 1.0f)) * ((((_1283 + (cb6[21u].w * _1278)) * cb6[21u].y) * _1383) + 1.0f);
        float _1392 = (((((((_1283 + (cb6[18u].w * _1279)) * cb6[18u].z) * _1299) + 1.0f) * (_1264 / max(1.0f - _1264, 9.9999999747524270787835121154785e-07f))) * ((((_1283 + (cb6[19u].w * _1279)) * cb6[19u].z) * _1327) + 1.0f)) * ((((_1283 + (cb6[20u].w * _1279)) * cb6[20u].z) * _1355) + 1.0f)) * ((((_1283 + (cb6[21u].w * _1279)) * cb6[21u].z) * _1383) + 1.0f);
        frontier_phi_14_12_ladder = _559;
        frontier_phi_14_12_ladder_1 = _555;
        frontier_phi_14_12_ladder_2 = cb6[12u].y * (_1390 / max(_1390 + 1.0f, 1.0f));
        frontier_phi_14_12_ladder_3 = cb6[12u].y * (_1391 / max(_1391 + 1.0f, 1.0f));
        frontier_phi_14_12_ladder_4 = cb6[12u].y * (_1392 / max(_1392 + 1.0f, 1.0f));
      } else {
        frontier_phi_14_12_ladder = _559;
        frontier_phi_14_12_ladder_1 = _555;
        frontier_phi_14_12_ladder_2 = _940;
        frontier_phi_14_12_ladder_3 = _941;
        frontier_phi_14_12_ladder_4 = _942;
      }
      _1110 = frontier_phi_14_12_ladder_1;
      _1111 = frontier_phi_14_12_ladder;
      _1112 = frontier_phi_14_12_ladder_2;
      _1114 = frontier_phi_14_12_ladder_3;
      _1116 = frontier_phi_14_12_ladder_4;
    } else {
      float4 _569 = _8.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
      float4 _574 = _17.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
      float _579 = _569.x - _574.x;
      float _580 = _569.y - _574.y;
      float _581 = _569.z - _574.z;
      float frontier_phi_14_6_ladder;
      float frontier_phi_14_6_ladder_1;
      float frontier_phi_14_6_ladder_2;
      float frontier_phi_14_6_ladder_3;
      float frontier_phi_14_6_ladder_4;
      if (_291) {
        uint _955 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * _72), uint(cb12[79u].y * _73)), 0u)).y & 31u);
        float4 _958 = _14.Load(int3(uint2(gl_GlobalInvocationID.x & 255u, gl_GlobalInvocationID.y & 255u), 0u));
        float _960 = _958.x;
        float _961 = _958.y;
        float _962 = _958.z;
        float _965 = ((_960 + _961) + _962) * 0.3333333432674407958984375f;
        float _966 = cb6[12u].x * _579;
        float _967 = cb6[12u].x * _580;
        float _968 = cb6[12u].x * _581;
        float _981 = _960 - _965;
        float _982 = _961 - _965;
        float _983 = _962 - _965;
        float _987 = _965 + (-0.5f);
        uint4 _999 = asuint(cb6[17u]);
        float _1003 = float(min((_999.x & _955), 1u));
        float _1031 = float(min((_999.y & _955), 1u));
        float _1059 = float(min((_999.z & _955), 1u));
        float _1087 = float(min((_999.w & _955), 1u));
        float _1094 = (((((((_987 + (cb6[18u].w * _981)) * cb6[18u].x) * _1003) + 1.0f) * (_966 / max(1.0f - _966, 9.9999999747524270787835121154785e-07f))) * ((((_987 + (cb6[19u].w * _981)) * cb6[19u].x) * _1031) + 1.0f)) * ((((_987 + (cb6[20u].w * _981)) * cb6[20u].x) * _1059) + 1.0f)) * ((((_987 + (cb6[21u].w * _981)) * cb6[21u].x) * _1087) + 1.0f);
        float _1095 = (((((((_987 + (cb6[18u].w * _982)) * cb6[18u].y) * _1003) + 1.0f) * (_967 / max(1.0f - _967, 9.9999999747524270787835121154785e-07f))) * ((((_987 + (cb6[19u].w * _982)) * cb6[19u].y) * _1031) + 1.0f)) * ((((_987 + (cb6[20u].w * _982)) * cb6[20u].y) * _1059) + 1.0f)) * ((((_987 + (cb6[21u].w * _982)) * cb6[21u].y) * _1087) + 1.0f);
        float _1096 = (((((((_987 + (cb6[18u].w * _983)) * cb6[18u].z) * _1003) + 1.0f) * (_968 / max(1.0f - _968, 9.9999999747524270787835121154785e-07f))) * ((((_987 + (cb6[19u].w * _983)) * cb6[19u].z) * _1031) + 1.0f)) * ((((_987 + (cb6[20u].w * _983)) * cb6[20u].z) * _1059) + 1.0f)) * ((((_987 + (cb6[21u].w * _983)) * cb6[21u].z) * _1087) + 1.0f);
        frontier_phi_14_6_ladder = _288;
        frontier_phi_14_6_ladder_1 = _287;
        frontier_phi_14_6_ladder_2 = cb6[12u].y * (_1094 / max(_1094 + 1.0f, 1.0f));
        frontier_phi_14_6_ladder_3 = cb6[12u].y * (_1095 / max(_1095 + 1.0f, 1.0f));
        frontier_phi_14_6_ladder_4 = cb6[12u].y * (_1096 / max(_1096 + 1.0f, 1.0f));
      } else {
        frontier_phi_14_6_ladder = _288;
        frontier_phi_14_6_ladder_1 = _287;
        frontier_phi_14_6_ladder_2 = _579;
        frontier_phi_14_6_ladder_3 = _580;
        frontier_phi_14_6_ladder_4 = _581;
      }
      _1110 = frontier_phi_14_6_ladder_1;
      _1111 = frontier_phi_14_6_ladder;
      _1112 = frontier_phi_14_6_ladder_2;
      _1114 = frontier_phi_14_6_ladder_3;
      _1116 = frontier_phi_14_6_ladder_4;
    }
    bool _1126 = cb6[1u].z > 0.0f;
    float _1411;
    if ((asuint(cb6[13u]).z != 0u) && _1126) {
      _1411 = (cb6[1u].z * (asfloat(_23.Load(6u).x) + (-1.0f))) + 1.0f;
    } else {
      _1411 = 1.0f;
    }
    float _1416 = _1110 + (-0.5f);
    float _1418 = (_1111 + (-0.5f)) * 2.0f;
    float _1426 = _1110 - (((_1418 * _1418) * _1416) * cb6[3u].x);
    float _1427 = _1111 - ((((_1416 * _1416) * 2.0f) * _1418) * cb6[3u].y);
    float _1430 = (_1426 + (-0.5f)) * 2.0f;
    float _1431 = (_1427 + (-0.5f)) * 2.0f;
    float _1433 = cb0[0u].x * 0.004999999888241291046142578125f;
    float _1436 = (clamp(_1427, 0.0f, 1.0f) + 1.0f) - _1433;
    float _1441 = clamp(abs(cos(_1436 * 650.0f)), 0.0f, 1.0f);
    float _1447 = clamp(_1426, 0.0f, 1.0f) + 1.0f;
    float _1448 = _1447 - _1433;
    float _1454 = sin(cb0[0u].x);
    float _1455 = _1447 + _1433;
    float _1470 = clamp(((((_1454 + _1454) * 0.100000001490116119384765625f) + 0.540000021457672119140625f) + ((clamp(abs(cos(_1455 * 550.0f)), 0.0f, 1.0f) + clamp(abs(cos(_1448 * 250.0f)), 0.0f, 1.0f)) * 0.1799999773502349853515625f)) * ((_1441 * 0.39999997615814208984375f) + 0.60000002384185791015625f), 0.0f, 1.0f);
    float _1622;
    float _1624;
    float _1626;
    if (cb6[1u].w > 0.0f) {
      float4 _1595 = _19.SampleLevel(_46, float2(_83, _84), 0.0f);
      float _1606 = (clamp(abs(cos(_1436 * 250.0f)), 0.0f, 1.0f) * 0.0007999999797903001308441162109375f) + 0.00120000005699694156646728515625f;
      float _1613 = (_1441 * 0.001199999940581619739532470703125f) + 0.001800000085495412349700927734375f;
      float _1615 = (_1606 + _1595.x) - _1613;
      float _1616 = (_1606 + _1595.y) - _1613;
      float _1617 = (_1606 + _1595.z) - _1613;
      float _1783;
      float _1784;
      float _1785;
      if (cb6[6u].x > 0.0f) {
        float _1773 = clamp((sqrt((_125 * _125) + (_123 * _123)) - cb6[5u].z) / (cb6[5u].w - cb6[5u].z), 0.0f, 1.0f);
        float _1779 = 1.0f - (((_1773 * _1773) * (3.0f - (_1773 * 2.0f))) * cb6[6u].x);
        _1783 = _1779 * _1615;
        _1784 = _1779 * _1616;
        _1785 = _1779 * _1617;
      } else {
        _1783 = _1615;
        _1784 = _1616;
        _1785 = _1617;
      }
      float _1787 = dot(float3(_1783, _1784, _1785), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      _1622 = (((_1783 - _1787) * cb6[6u].y) + _1787) * cb6[1u].w;
      _1624 = (((_1784 - _1787) * cb6[6u].y) + _1787) * cb6[1u].w;
      _1626 = (((_1785 - _1787) * cb6[6u].y) + _1787) * cb6[1u].w;
    } else {
      _1622 = 0.0f;
      _1624 = 0.0f;
      _1626 = 0.0f;
    }
    float _1815;
    float _1816;
    float _1817;
    if (cb6[2u].x > 0.0f) {
      float4 _1804 = _18.SampleLevel(_46, float2(_1426, 1.0f - _1427), 0.0f);

      // Custom
      if (injectedData.toneMapGammaCorrection >= 1.f) {
        _1804 = renodx::color::correct::Gamma(max(0.f, _1804));
      }

      _1815 = (cb6[2u].x * _1804.x) + _1622;
      _1816 = (cb6[2u].x * _1804.y) + _1624;
      _1817 = (cb6[2u].x * _1804.z) + _1626;
    } else {
      _1815 = _1622;
      _1816 = _1624;
      _1817 = _1626;
    }
    float _1995;
    float _1996;
    float _1997;
    if (_1126) {
      float4 _1958 = _16.SampleLevel(_46, float2(_1110, _1111), 0.0f);
      float4 _1965 = _15.SampleLevel(_46, float2(_1110, _1111), 0.0f);
      float _1970 = _1965.w;
      float _1971 = 1.0f - _1970;
      float _1976 = (_1971 * _1958.w) + _1970;
      _1995 = (((_1976 * ((_1965.x - _1112) + (_1971 * _1958.x))) + _1112) * cb6[1u].z) + _1815;
      _1996 = (((_1976 * ((_1965.y - _1114) + (_1971 * _1958.y))) + _1114) * cb6[1u].z) + _1816;
      _1997 = (((_1976 * ((_1965.z - _1116) + (_1971 * _1958.z))) + _1116) * cb6[1u].z) + _1817;
    } else {
      _1995 = _1815;
      _1996 = _1816;
      _1997 = _1817;
    }
    float _2167;
    float _2169;
    float _2171;
    if (cb6[1u].x > 0.0f) {
      float _2074 = cb6[6u].w * _1430;
      float _2075 = cb6[6u].w * _1431;
      float4 _2079 = _13.SampleLevel(_46, float2(_2074 + _1426, _2075 + _1427), 0.0f);
      float4 _2083 = _13.SampleLevel(_46, float2(_1426, _1427), 0.0f);
      float4 _2090 = _13.SampleLevel(_46, float2(_1426 - _2074, _1427 - _2075), 0.0f);
      float4 _2105 = _13.SampleLevel(_46, float2((cb6[7u].x * _1430) + _1426, (cb6[7u].y * _1431) + _1427), 1.0f);
      float4 _2116 = _13.SampleLevel(_46, float2((cb6[7u].z * _1430) + _1426, (cb6[7u].w * _1431) + _1427), 2.0f);
      float4 _2131 = _13.SampleLevel(_46, float2((cb6[8u].x * _1430) + _1426, (cb6[8u].y * _1431) + _1427), 4.0f);

      // Custom
      if (injectedData.toneMapGammaCorrection >= 1.f) {
        _2079 = renodx::color::correct::Gamma(max(0.f, _2079));
        _2083 = renodx::color::correct::Gamma(max(0.f, _2083));
        _2090 = renodx::color::correct::Gamma(max(0.f, _2090));
        _2105 = renodx::color::correct::Gamma(max(0.f, _2105));
        _2116 = renodx::color::correct::Gamma(max(0.f, _2116));
        _2131 = renodx::color::correct::Gamma(max(0.f, _2131));
      }

      float _2163 = 1.0f - (((_2083.w + _2079.w) + _2090.w) * 0.3333333432674407958984375f);
      float _2164 = clamp(_1470 * (((cb6[8u].w * _2116.x) + (cb6[8u].z * _2105.x)) + (cb6[9u].x * _2131.x)), 0.0f, 1.0f) * _2163;
      float _2165 = clamp(_1470 * (((cb6[8u].w * _2116.y) + (cb6[8u].z * _2105.y)) + (cb6[9u].x * _2131.y)), 0.0f, 1.0f) * _2163;
      float _2166 = clamp(_1470 * (((cb6[8u].w * _2116.z) + (cb6[8u].z * _2105.z)) + (cb6[9u].x * _2131.z)), 0.0f, 1.0f) * _2163;
      float _2258;
      float _2259;
      float _2260;
      if (_1126) {
        float _2254 = 1.0f - (dot(float3(cb6[1u].z * _1112, cb6[1u].z * _1114, cb6[1u].z * _1116), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f)) * 0.699999988079071044921875f);
        _2258 = _2254 * _2164;
        _2259 = _2254 * _2165;
        _2260 = _2254 * _2166;
      } else {
        _2258 = _2164;
        _2259 = _2165;
        _2260 = _2166;
      }
      float _2262 = dot(float3(_2258, _2259, _2260), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      float _2274 = cb6[1u].x * _1411;
      float _2288 = _1426 - cb6[3u].z;
      float _2289 = _1427 - cb6[3u].w;
      float4 _2295 = _13.SampleLevel(_46, float2(_2288, _2289), 0.0f);
      float _2297 = _2295.w;
      float _2310 = 1.0f - (cb6[4u].x * clamp(exp2(log2(abs((clamp(cb6[4u].y, 0.0f, 1.0f) * (_20.SampleLevel(_46, float2(_2288, _2289), cb6[4u].y + (-1.0f)).w - _2297)) + _2297)) * 0.819999992847442626953125f), 0.0f, 1.0f));
      float _2311 = _1454 * 0.00999999977648258209228515625f;
      float _2339 = (((clamp((cos((_2311 + _1427) * 1700.0f) + 1.0f) * 0.75f, 0.0f, 1.0f) * 0.00850000046193599700927734375f) + 0.00150000001303851604461669921875f) * (((_2311 + 0.540000021457672119140625f) + (_1454 * 0.100000001490116119384765625f)) + ((clamp(abs(cos(_1455 * 350.0f)), 0.0f, 1.0f) + clamp(abs(cos(_1448 * 350.0f)), 0.0f, 1.0f)) * 0.1799999773502349853515625f))) + 0.9900000095367431640625f;
      float _2341 = (_2079.x * 2.0f) * _2339;
      float _2342 = (_2083.y * 2.0f) * _2339;
      float _2343 = (_2090.z * 2.0f) * _2339;
      float _2344 = dot(float3(_2341, _2342, _2343), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      float _2371 = cb6[5u].x * _1411;
      float4 _2373 = _20.SampleLevel(_46, float2(_1426, _1427), cb6[5u].y);
      _2167 = (((((_2341 - _2344) * cb6[6u].z) + _2344) * _1411) + ((((_2274 * (((_2258 - _2262) * cb6[6u].z) + _2262)) + _1995) * _2163) * _2310)) + (_2373.x * _2371);
      _2169 = (((((_2342 - _2344) * cb6[6u].z) + _2344) * _1411) + ((((_2274 * (((_2259 - _2262) * cb6[6u].z) + _2262)) + _1996) * _2163) * _2310)) + (_2373.y * _2371);
      _2171 = (((((_2343 - _2344) * cb6[6u].z) + _2344) * _1411) + ((((_2274 * (((_2260 - _2262) * cb6[6u].z) + _2262)) + _1997) * _2163) * _2310)) + (_2373.z * _2371);
    } else {
      _2167 = _1995;
      _2169 = _1996;
      _2171 = _1997;
    }
    float _104;
    float _107;
    float _110;
    if (cb6[1u].y > 0.0f) {
      float4 _2381 = _13.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
      float _2387 = (_1411 * 2.0f) * cb6[1u].y;
      _104 = (_2387 * _2381.x) + _2167;
      _107 = (_2387 * _2381.y) + _2169;
      _110 = (_2387 * _2381.z) + _2171;
    } else {
      _104 = _2167;
      _107 = _2169;
      _110 = _2171;
    }
    float frontier_phi_1_57_ladder;
    float frontier_phi_1_57_ladder_1;
    float frontier_phi_1_57_ladder_2;
    if (_289) {
      float _2471;
      float _2473;
      float _2475;
      float _2477;
      float _2479;
      float _2481;
      uint _2483;
      _2471 = 1.0f;
      _2473 = 1.0f;
      _2475 = 1.0f;
      _2477 = ((_72 / cb6[12u].z) * 0.800000011920928955078125f) * (cb6[12u].z / cb6[12u].w);
      _2479 = (_73 / cb6[12u].w) * 5.0f;
      _2481 = 1.0f;
      _2483 = 1u;
      float _2472;
      float _2474;
      float _2476;
      for (;;) {
        float _2485 = float(int(_2483));
        float _2486 = _2485 + _2477;
        float _2487 = _2485 + _2479;
        float _2488 = floor(_2486);
        float _2489 = floor(_2487);
        float _2497 = frac(_2488 * 0.103100001811981201171875f);
        float _2498 = frac(_2489 * 0.10300000011920928955078125f);
        float _2499 = frac(_2488 * 0.097300000488758087158203125f);
        float _2500 = frac(_2489 * 0.109899997711181640625f);
        float _2505 = dot(float4(_2497, _2498, _2499, _2500), float4(_2500 + 33.3300018310546875f, _2499 + 33.3300018310546875f, _2497 + 33.3300018310546875f, _2498 + 33.3300018310546875f));
        float _2508 = _2505 + _2497;
        float _2509 = _2505 + _2498;
        float _2510 = _2505 + _2499;
        float _2511 = _2505 + _2500;
        float _2520 = frac((_2508 + _2509) * _2510);
        float _2521 = frac((_2508 + _2510) * _2509);
        float _2522 = frac((_2509 + _2510) * _2511);
        bool _2541 = frac((_2510 + _2511) * _2508) > 0.5f;
        _2472 = (_2541 ? _2520 : 1.0f) * _2471;
        _2474 = (_2541 ? _2521 : 1.0f) * _2473;
        _2476 = (_2541 ? _2522 : 1.0f) * _2475;
        uint _2484 = _2483 + 1u;
        if (_2484 == 15u) {
          break;
        } else {
          _2471 = _2472;
          _2473 = _2474;
          _2475 = _2476;
          _2477 = (((_2522 * 0.20000000298023223876953125f) * (frac(_2486) - _2481)) * frac(floor(((cb0[0u].x * 0.1500000059604644775390625f) + 300.0f) / _2520) * _2520)) + _2477;
          _2479 = ((_2522 * _2521) * (frac(_2487) - _2481)) + _2479;
          _2481 *= (-2.0f);
          _2483 = _2484;
        }
      }
      float _2559 = floor((cb0[0u].x * 2.0f) + cb6[0u].y);
      float _2560 = _2559 * 0.00999999977648258209228515625f;
      float _2570 = ((_2560 + 1.0f) - (floor(_2559 * 9.9999997473787516355514526367188e-05f) * 100.0f)) * 0.00999999977648258209228515625f;
      float _2571 = ((_2559 + 1.0f) - (floor(_2560) * 100.0f)) * 0.00999999977648258209228515625f;
      float _2576 = 0.5f - (cb6[0u].y * 0.375f);
      float _2577 = (cb6[0u].y * 0.75f) + (-0.100000001490116119384765625f);
      float _2580 = frac((((floor(_1110 * 10.0f) * 0.100000001490116119384765625f) + 0.0500000007450580596923828125f) + _2570) * 0.103100001811981201171875f);
      float _2581 = frac((((floor(_1111 * 33.33333587646484375f) * 0.02999999932944774627685546875f) + 0.014999999664723873138427734375f) + _2571) * 0.103100001811981201171875f);
      float _2583 = _2580 + 33.3300018310546875f;
      float _2584 = dot(float3(_2580, _2581, _2580), float3(_2581 + 33.3300018310546875f, _2583, _2583));
      float _2592 = frac(((_2581 + _2580) + (_2584 * 2.0f)) * (_2584 + _2580));
      float _2595 = ((1.0f - _2592) * _2577) + _2592;
      float _2616 = frac((((floor(_1110 * 11.111110687255859375f) * 0.0900000035762786865234375f) + 0.04500000178813934326171875f) + _2570) * 0.103100001811981201171875f);
      float _2617 = frac((((floor(_1111 * 25.0f) * 0.039999999105930328369140625f) + 0.0199999995529651641845703125f) + _2571) * 0.103100001811981201171875f);
      float _2619 = _2616 + 33.3300018310546875f;
      float _2620 = dot(float3(_2616, _2617, _2616), float3(_2617 + 33.3300018310546875f, _2619, _2619));
      float _2628 = frac(((_2617 + _2616) + (_2620 * 2.0f)) * (_2620 + _2616));
      float _2631 = ((1.0f - _2628) * _2577) + _2628;
      float _2635 = max(0.0f, _2472);
      float _2636 = max(0.0f, _2474);
      float _2637 = max(0.0f, _2476);
      float _2639 = max(_2635, max(_2636, _2637));
      float _2640 = _2639 * _2639;
      float _2641 = _2635 * 2.0f;
      float _2642 = _2636 * 0.100000001490116119384765625f;
      float _2643 = _2637 * 0.25f;
      float _2651 = clamp((round(_2595 - (_2595 * _2576)) * 5.0f) * round(_2631 - (_2631 * _2576)), 0.0f, 1.0f) * 3.0f;
      frontier_phi_1_57_ladder = (((_2642 - _107) + (_2640 * _2642)) * _2651) + _107;
      frontier_phi_1_57_ladder_1 = (((_2643 - _110) + (_2640 * _2643)) * _2651) + _110;
      frontier_phi_1_57_ladder_2 = (((_2641 - _104) + (_2640 * _2641)) * _2651) + _104;
    } else {
      frontier_phi_1_57_ladder = _107;
      frontier_phi_1_57_ladder_1 = _110;
      frontier_phi_1_57_ladder_2 = _104;
    }
    _101 = frontier_phi_1_57_ladder_2;
    _105 = frontier_phi_1_57_ladder;
    _108 = frontier_phi_1_57_ladder_1;
  }
  bool _117 = asuint(cb6[15u]).x == 0u;
  float _292;
  float _295;
  float _297;
  if (_117) {
    _292 = _293;
    _295 = _293;
    _297 = _293;
  } else {
    float4 _304 = _8.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
    float _307 = _304.x;
    float _308 = _304.y;
    float _309 = _304.z;
    float _786;
    float _787;
    float _788;
    if (cb6[12u].x > 0.0f) {
      float4 _627 = _14.Load(int3(uint2(gl_GlobalInvocationID.x & 255u, gl_GlobalInvocationID.y & 255u), 0u));

      // Custom: Replace Film Grain
      if (injectedData.fxFilmGrain) {
        float3 grainedColor = renodx::effects::ApplyFilmGrain(
            float3(_307, _308, _309),
            _627.xy,
            frac(cb0[0u].x / 1000.f),
            injectedData.fxFilmGrain * 0.03f,
            (cb6[12u].y == 1.f) ? 1.f : (203.f / 100.f));
        _786 = grainedColor.r;
        _787 = grainedColor.g;
        _788 = grainedColor.b;
      } else {
        uint _623 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * _72), uint(cb12[79u].y * _73)), 0u)).y & 31u);
        float _629 = _627.x;
        float _630 = _627.y;
        float _631 = _627.z;
        float _634 = ((_629 + _630) + _631) * 0.3333333432674407958984375f;
        float _636 = cb6[12u].x * _307;
        float _637 = cb6[12u].x * _308;
        float _638 = cb6[12u].x * _309;
        float _653 = _629 - _634;
        float _654 = _630 - _634;
        float _655 = _631 - _634;
        float _659 = _634 + (-0.5f);
        uint4 _672 = asuint(cb6[17u]);
        float _676 = float(min((_672.x & _623), 1u));
        float _705 = float(min((_672.y & _623), 1u));
        float _734 = float(min((_672.z & _623), 1u));
        float _763 = float(min((_672.w & _623), 1u));
        float _770 = (((((((_659 + (cb6[18u].w * _653)) * cb6[18u].x) * _676) + 1.0f) * (_636 / max(1.0f - _636, 9.9999999747524270787835121154785e-07f))) * ((((_659 + (cb6[19u].w * _653)) * cb6[19u].x) * _705) + 1.0f)) * ((((_659 + (cb6[20u].w * _653)) * cb6[20u].x) * _734) + 1.0f)) * ((((_659 + (cb6[21u].w * _653)) * cb6[21u].x) * _763) + 1.0f);
        float _771 = (((((((_659 + (cb6[18u].w * _654)) * cb6[18u].y) * _676) + 1.0f) * (_637 / max(1.0f - _637, 9.9999999747524270787835121154785e-07f))) * ((((_659 + (cb6[19u].w * _654)) * cb6[19u].y) * _705) + 1.0f)) * ((((_659 + (cb6[20u].w * _654)) * cb6[20u].y) * _734) + 1.0f)) * ((((_659 + (cb6[21u].w * _654)) * cb6[21u].y) * _763) + 1.0f);
        float _772 = (((((((_659 + (cb6[18u].w * _655)) * cb6[18u].z) * _676) + 1.0f) * (_638 / max(1.0f - _638, 9.9999999747524270787835121154785e-07f))) * ((((_659 + (cb6[19u].w * _655)) * cb6[19u].z) * _705) + 1.0f)) * ((((_659 + (cb6[20u].w * _655)) * cb6[20u].z) * _734) + 1.0f)) * ((((_659 + (cb6[21u].w * _655)) * cb6[21u].z) * _763) + 1.0f);
        _786 = cb6[12u].y * (_770 / max(_770 + 1.0f, 1.0f));
        _787 = cb6[12u].y * (_771 / max(_771 + 1.0f, 1.0f));
        _788 = cb6[12u].y * (_772 / max(_772 + 1.0f, 1.0f));
      }
    } else {
      _786 = _307;
      _787 = _308;
      _788 = _309;
    }
    float frontier_phi_3_10_ladder;
    float frontier_phi_3_10_ladder_1;
    float frontier_phi_3_10_ladder_2;
    if (_100) {
      frontier_phi_3_10_ladder = 0.0f;
      frontier_phi_3_10_ladder_1 = 0.0f;
      frontier_phi_3_10_ladder_2 = 0.0f;
    } else {
      float4 _1203 = _16.SampleLevel(_46, float2(_83, _84), 0.0f);
      float4 _1210 = _15.SampleLevel(_46, float2(_83, _84), 0.0f);
      float _1215 = _1210.w;
      float _1216 = 1.0f - _1215;
      float _1221 = (_1216 * _1203.w) + _1215;
      frontier_phi_3_10_ladder = ((_1221 * ((_1210.z - _788) + (_1216 * _1203.z))) + _788) * cb6[1u].z;
      frontier_phi_3_10_ladder_1 = ((_1221 * ((_1210.y - _787) + (_1216 * _1203.y))) + _787) * cb6[1u].z;
      frontier_phi_3_10_ladder_2 = ((_1221 * ((_1210.x - _786) + (_1216 * _1203.x))) + _786) * cb6[1u].z;
    }
    _292 = frontier_phi_3_10_ladder_2;
    _295 = frontier_phi_3_10_ladder_1;
    _297 = frontier_phi_3_10_ladder;
  }
  float _597;
  float _599;
  float _601;
  if (cb6[14u].w > 0.0f) {
    uint4 _585 = asuint(cb6[10u]);
    uint _586 = _585.x;
    uint _588 = _585.z;
    uint _591 = _585.y;
    uint _594 = _585.w;
    float frontier_phi_8_7_ladder;
    float frontier_phi_8_7_ladder_1;
    float frontier_phi_8_7_ladder_2;
    if ((((gl_GlobalInvocationID.x >= _586) && (gl_GlobalInvocationID.x < _588)) && (gl_GlobalInvocationID.y >= _591)) && (gl_GlobalInvocationID.y < _594)) {
      float4 _1151 = _24.SampleLevel(_46, float2((cb6[11u].z * ((_72 - float(int(_586))) / float(int(_588 - _586)))) + cb6[11u].x, (cb6[11u].w * ((_73 - float(int(_591))) / float(int(_594 - _591)))) + cb6[11u].y), 0.0f);
      frontier_phi_8_7_ladder = _1151.y * cb6[14u].w;
      frontier_phi_8_7_ladder_1 = _1151.x * cb6[14u].w;
      frontier_phi_8_7_ladder_2 = _1151.z * cb6[14u].w;
    } else {
      frontier_phi_8_7_ladder = _105;
      frontier_phi_8_7_ladder_1 = _101;
      frontier_phi_8_7_ladder_2 = _108;
    }
    _597 = frontier_phi_8_7_ladder_1;
    _599 = frontier_phi_8_7_ladder;
    _601 = frontier_phi_8_7_ladder_2;
  } else {
    _597 = _101;
    _599 = _105;
    _601 = _108;
  }

  // Custom: Switch to colormath
  /*
  uint4 _606 = asuint(cb6[13u]);
  float _1157;
  float _1163;
  float _1169;
  if (_606.y == 0u) {
    _1157 = _597;
    _1163 = _599;
    _1169 = _601;
  } else {
    uint _1200 = _606.w;
    float _1538;
    float _1539;
    float _1540;
    if (cb6[14u].z != 1.0f) {
      _1538 = exp2(log2(abs(_597)) * cb6[14u].z);
      _1539 = exp2(log2(abs(_599)) * cb6[14u].z);
      _1540 = exp2(log2(abs(_601)) * cb6[14u].z);
    } else {
      _1538 = _597;
      _1539 = _599;
      _1540 = _601;
    }
    float _1550 = frac(_72 * 211.1488037109375f);
    float _1551 = frac(_73 * 210.944000244140625f);
    float _1552 = frac(cb0[0u].x * 6.227200031280517578125f);
    float _1555 = _1552 + 33.3300018310546875f;
    float _1556 = dot(float3(_1550, _1551, _1552), float3(_1551 + 33.3300018310546875f, _1550 + 33.3300018310546875f, _1555));
    float _1559 = _1556 + _1550;
    float _1560 = _1556 + _1551;
    float _1562 = _1559 + _1560;
    float _1567 = frac(_1562 * (_1556 + _1552));
    float _1568 = frac((_1559 * 2.0f) * _1560);
    float _1569 = frac(_1562 * _1559);
    float _1575 = frac((_72 + 64.0f) * 211.1488037109375f);
    float _1576 = frac((_73 + 64.0f) * 210.944000244140625f);
    float _1579 = dot(float3(_1575, _1576, _1552), float3(_1576 + 33.3300018310546875f, _1575 + 33.3300018310546875f, _1555));
    float _1582 = _1579 + _1575;
    float _1583 = _1579 + _1576;
    float _1585 = _1582 + _1583;
    float _1590 = frac(_1585 * (_1579 + _1552));
    float _1591 = frac((_1582 * 2.0f) * _1583);
    float _1592 = frac(_1585 * _1582);
    float frontier_phi_16_25_ladder;
    float frontier_phi_16_25_ladder_1;
    float frontier_phi_16_25_ladder_2;
    if (_1200 == 0u) {
      float _1728 = (_1538 <= 0.003130800090730190277099609375f) ? (_1538 * 12.9200000762939453125f) : ((exp2(log2(abs(_1538)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1729 = (_1539 <= 0.003130800090730190277099609375f) ? (_1539 * 12.9200000762939453125f) : ((exp2(log2(abs(_1539)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1730 = (_1540 <= 0.003130800090730190277099609375f) ? (_1540 * 12.9200000762939453125f) : ((exp2(log2(abs(_1540)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1731 = _1728 * 510.0f;
      float _1733 = _1729 * 510.0f;
      float _1734 = _1730 * 510.0f;
      frontier_phi_16_25_ladder = (((_1569 + (-0.5f)) + (min(min(1.0f, _1734), 510.0f - _1734) * (_1592 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1730;
      frontier_phi_16_25_ladder_1 = (((_1567 + (-0.5f)) + (min(min(1.0f, _1731), 510.0f - _1731) * (_1590 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1728;
      frontier_phi_16_25_ladder_2 = (((_1568 + (-0.5f)) + (min(min(1.0f, _1733), 510.0f - _1733) * (_1591 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1729;
    } else {
      float frontier_phi_16_25_ladder_33_ladder;
      float frontier_phi_16_25_ladder_33_ladder_1;
      float frontier_phi_16_25_ladder_33_ladder_2;
      if (_1200 == 1u) {
        float _1877 = mad(0.043306000530719757080078125f, _1540, mad(0.329291999340057373046875f, _1539, _1538 * 0.627402007579803466796875f));
        float _1883 = mad(0.011359999887645244598388671875f, _1540, mad(0.9195439815521240234375f, _1539, _1538 * 0.06909500062465667724609375f));
        float _1889 = mad(0.89557802677154541015625f, _1540, mad(0.08802799880504608154296875f, _1539, _1538 * 0.0163940005004405975341796875f));
        float _1925 = exp2(log2(abs((((clamp(mad(_1889, cb6[22u].z, mad(_1883, cb6[22u].y, _1877 * cb6[22u].x)), 0.0f, 1.0f) - _1877) * cb6[16u].x) + _1877) * cb6[14u].x)) * 0.1593017578125f);
        float _1926 = exp2(log2(abs((((clamp(mad(_1889, cb6[23u].z, mad(_1883, cb6[23u].y, _1877 * cb6[23u].x)), 0.0f, 1.0f) - _1883) * cb6[16u].x) + _1883) * cb6[14u].x)) * 0.1593017578125f);
        float _1927 = exp2(log2(abs((((clamp(mad(_1889, cb6[24u].z, mad(_1883, cb6[24u].y, _1877 * cb6[24u].x)), 0.0f, 1.0f) - _1889) * cb6[16u].x) + _1889) * cb6[14u].x)) * 0.1593017578125f);
        frontier_phi_16_25_ladder_33_ladder = exp2(log2(abs(((_1927 * 18.8515625f) + 0.8359375f) / ((_1927 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_16_25_ladder_33_ladder_1 = exp2(log2(abs(((_1925 * 18.8515625f) + 0.8359375f) / ((_1925 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_16_25_ladder_33_ladder_2 = exp2(log2(abs(((_1926 * 18.8515625f) + 0.8359375f) / ((_1926 * 18.6875f) + 1.0f))) * 78.84375f);
      } else {
        float frontier_phi_16_25_ladder_33_ladder_41_ladder;
        float frontier_phi_16_25_ladder_33_ladder_41_ladder_1;
        float frontier_phi_16_25_ladder_33_ladder_41_ladder_2;
        if (_1200 == 2u) {
          frontier_phi_16_25_ladder_33_ladder_41_ladder = _1540 * cb6[14u].x;
          frontier_phi_16_25_ladder_33_ladder_41_ladder_1 = _1538 * cb6[14u].x;
          frontier_phi_16_25_ladder_33_ladder_41_ladder_2 = _1539 * cb6[14u].x;
        } else {
          float frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder;
          float frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_1;
          float frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_2;
          if (_1200 == 3u) {
            float _2185 = mad(_1540, cb6[22u].z, mad(_1539, cb6[22u].y, _1538 * cb6[22u].x)) * cb6[14u].x;
            float _2186 = mad(_1540, cb6[23u].z, mad(_1539, cb6[23u].y, _1538 * cb6[23u].x)) * cb6[14u].x;
            float _2187 = mad(_1540, cb6[24u].z, mad(_1539, cb6[24u].y, _1538 * cb6[24u].x)) * cb6[14u].x;
            float _2212 = (_2185 <= 0.003130800090730190277099609375f) ? (_2185 * 12.9200000762939453125f) : ((exp2(log2(abs(_2185)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2213 = (_2186 <= 0.003130800090730190277099609375f) ? (_2186 * 12.9200000762939453125f) : ((exp2(log2(abs(_2186)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2214 = (_2187 <= 0.003130800090730190277099609375f) ? (_2187 * 12.9200000762939453125f) : ((exp2(log2(abs(_2187)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2215 = _2212 * 2046.0f;
            float _2217 = _2213 * 2046.0f;
            float _2218 = _2214 * 2046.0f;
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder = (((_1569 + (-0.5f)) + (min(min(1.0f, _2218), 2046.0f - _2218) * (_1592 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2214;
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_1 = (((_1567 + (-0.5f)) + (min(min(1.0f, _2215), 2046.0f - _2215) * (_1590 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2212;
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_2 = (((_1568 + (-0.5f)) + (min(min(1.0f, _2217), 2046.0f - _2217) * (_1591 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2213;
          } else {
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder = (_1540 * cb6[14u].x) + cb6[14u].y;
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_1 = (_1538 * cb6[14u].x) + cb6[14u].y;
            frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_2 = (_1539 * cb6[14u].x) + cb6[14u].y;
          }
          frontier_phi_16_25_ladder_33_ladder_41_ladder = frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder;
          frontier_phi_16_25_ladder_33_ladder_41_ladder_1 = frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_1;
          frontier_phi_16_25_ladder_33_ladder_41_ladder_2 = frontier_phi_16_25_ladder_33_ladder_41_ladder_47_ladder_2;
        }
        frontier_phi_16_25_ladder_33_ladder = frontier_phi_16_25_ladder_33_ladder_41_ladder;
        frontier_phi_16_25_ladder_33_ladder_1 = frontier_phi_16_25_ladder_33_ladder_41_ladder_1;
        frontier_phi_16_25_ladder_33_ladder_2 = frontier_phi_16_25_ladder_33_ladder_41_ladder_2;
      }
      frontier_phi_16_25_ladder = frontier_phi_16_25_ladder_33_ladder;
      frontier_phi_16_25_ladder_1 = frontier_phi_16_25_ladder_33_ladder_1;
      frontier_phi_16_25_ladder_2 = frontier_phi_16_25_ladder_33_ladder_2;
    }
    _1157 = frontier_phi_16_25_ladder_1;
    _1163 = frontier_phi_16_25_ladder_2;
    _1169 = frontier_phi_16_25_ladder;
  }
  float _1473;
  float _1479;
  float _1485;
  if (_117) {
    _1473 = _292;
    _1479 = _295;
    _1485 = _297;
  } else {
    uint _1524 = _606.w;
    float _1647;
    float _1648;
    float _1649;
    if (cb6[15u].w != 1.0f) {
      _1647 = exp2(log2(abs(_292)) * cb6[15u].w);
      _1648 = exp2(log2(abs(_295)) * cb6[15u].w);
      _1649 = exp2(log2(abs(_297)) * cb6[15u].w);
    } else {
      _1647 = _292;
      _1648 = _295;
      _1649 = _297;
    }
    float _1656 = frac(_72 * 211.1488037109375f);
    float _1657 = frac(_73 * 210.944000244140625f);
    float _1658 = frac(cb0[0u].x * 6.227200031280517578125f);
    float _1661 = _1658 + 33.3300018310546875f;
    float _1662 = dot(float3(_1656, _1657, _1658), float3(_1657 + 33.3300018310546875f, _1656 + 33.3300018310546875f, _1661));
    float _1665 = _1662 + _1656;
    float _1666 = _1662 + _1657;
    float _1668 = _1665 + _1666;
    float _1673 = frac(_1668 * (_1662 + _1658));
    float _1674 = frac((_1665 * 2.0f) * _1666);
    float _1675 = frac(_1668 * _1665);
    float _1680 = frac((_72 + 64.0f) * 211.1488037109375f);
    float _1681 = frac((_73 + 64.0f) * 210.944000244140625f);
    float _1684 = dot(float3(_1680, _1681, _1658), float3(_1681 + 33.3300018310546875f, _1680 + 33.3300018310546875f, _1661));
    float _1687 = _1684 + _1680;
    float _1688 = _1684 + _1681;
    float _1690 = _1687 + _1688;
    float _1695 = frac(_1690 * (_1684 + _1658));
    float _1696 = frac((_1687 * 2.0f) * _1688);
    float _1697 = frac(_1690 * _1687);
    float frontier_phi_22_31_ladder;
    float frontier_phi_22_31_ladder_1;
    float frontier_phi_22_31_ladder_2;
    if (_1524 == 0u) {
      float _1842 = (_1647 <= 0.003130800090730190277099609375f) ? (_1647 * 12.9200000762939453125f) : ((exp2(log2(abs(_1647)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1843 = (_1648 <= 0.003130800090730190277099609375f) ? (_1648 * 12.9200000762939453125f) : ((exp2(log2(abs(_1648)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1844 = (_1649 <= 0.003130800090730190277099609375f) ? (_1649 * 12.9200000762939453125f) : ((exp2(log2(abs(_1649)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1845 = _1842 * 510.0f;
      float _1846 = _1843 * 510.0f;
      float _1847 = _1844 * 510.0f;
      frontier_phi_22_31_ladder = (((_1673 + (-0.5f)) + (min(min(1.0f, _1845), 510.0f - _1845) * (_1695 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1842;
      frontier_phi_22_31_ladder_1 = (((_1675 + (-0.5f)) + (min(min(1.0f, _1847), 510.0f - _1847) * (_1697 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1844;
      frontier_phi_22_31_ladder_2 = (((_1674 + (-0.5f)) + (min(min(1.0f, _1846), 510.0f - _1846) * (_1696 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1843;
    } else {
      float frontier_phi_22_31_ladder_39_ladder;
      float frontier_phi_22_31_ladder_39_ladder_1;
      float frontier_phi_22_31_ladder_39_ladder_2;
      if (_1524 == 1u) {
        float _2002 = mad(0.043306000530719757080078125f, _1649, mad(0.329291999340057373046875f, _1648, _1647 * 0.627402007579803466796875f));
        float _2005 = mad(0.011359999887645244598388671875f, _1649, mad(0.9195439815521240234375f, _1648, _1647 * 0.06909500062465667724609375f));
        float _2008 = mad(0.89557802677154541015625f, _1649, mad(0.08802799880504608154296875f, _1648, _1647 * 0.0163940005004405975341796875f));
        float _2042 = exp2(log2(abs((((clamp(mad(_2008, cb6[26u].z, mad(_2005, cb6[26u].y, _2002 * cb6[26u].x)), 0.0f, 1.0f) - _2002) * cb6[16u].x) + _2002) * cb6[15u].y)) * 0.1593017578125f);
        float _2043 = exp2(log2(abs((((clamp(mad(_2008, cb6[27u].z, mad(_2005, cb6[27u].y, _2002 * cb6[27u].x)), 0.0f, 1.0f) - _2005) * cb6[16u].x) + _2005) * cb6[15u].y)) * 0.1593017578125f);
        float _2044 = exp2(log2(abs((((clamp(mad(_2008, cb6[28u].z, mad(_2005, cb6[28u].y, _2002 * cb6[28u].x)), 0.0f, 1.0f) - _2008) * cb6[16u].x) + _2008) * cb6[15u].y)) * 0.1593017578125f);
        frontier_phi_22_31_ladder_39_ladder = exp2(log2(abs(((_2042 * 18.8515625f) + 0.8359375f) / ((_2042 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_22_31_ladder_39_ladder_1 = exp2(log2(abs(((_2044 * 18.8515625f) + 0.8359375f) / ((_2044 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_22_31_ladder_39_ladder_2 = exp2(log2(abs(((_2043 * 18.8515625f) + 0.8359375f) / ((_2043 * 18.6875f) + 1.0f))) * 78.84375f);
      } else {
        float frontier_phi_22_31_ladder_39_ladder_45_ladder;
        float frontier_phi_22_31_ladder_39_ladder_45_ladder_1;
        float frontier_phi_22_31_ladder_39_ladder_45_ladder_2;
        if (_1524 == 2u) {
          frontier_phi_22_31_ladder_39_ladder_45_ladder = _1647 * cb6[15u].y;
          frontier_phi_22_31_ladder_39_ladder_45_ladder_1 = _1649 * cb6[15u].y;
          frontier_phi_22_31_ladder_39_ladder_45_ladder_2 = _1648 * cb6[15u].y;
        } else {
          float frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder;
          float frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_1;
          float frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_2;
          if (_1524 == 3u) {
            float _2403 = mad(_1649, cb6[26u].z, mad(_1648, cb6[26u].y, _1647 * cb6[26u].x)) * cb6[15u].y;
            float _2404 = mad(_1649, cb6[27u].z, mad(_1648, cb6[27u].y, _1647 * cb6[27u].x)) * cb6[15u].y;
            float _2405 = mad(_1649, cb6[28u].z, mad(_1648, cb6[28u].y, _1647 * cb6[28u].x)) * cb6[15u].y;
            float _2430 = (_2403 <= 0.003130800090730190277099609375f) ? (_2403 * 12.9200000762939453125f) : ((exp2(log2(abs(_2403)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2431 = (_2404 <= 0.003130800090730190277099609375f) ? (_2404 * 12.9200000762939453125f) : ((exp2(log2(abs(_2404)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2432 = (_2405 <= 0.003130800090730190277099609375f) ? (_2405 * 12.9200000762939453125f) : ((exp2(log2(abs(_2405)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2433 = _2430 * 2046.0f;
            float _2434 = _2431 * 2046.0f;
            float _2435 = _2432 * 2046.0f;
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder = (((_1673 + (-0.5f)) + (min(min(1.0f, _2433), 2046.0f - _2433) * (_1695 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2430;
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_1 = (((_1675 + (-0.5f)) + (min(min(1.0f, _2435), 2046.0f - _2435) * (_1697 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2432;
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_2 = (((_1674 + (-0.5f)) + (min(min(1.0f, _2434), 2046.0f - _2434) * (_1696 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2431;
          } else {
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder = (_1647 * cb6[15u].y) + cb6[15u].z;
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_1 = (_1649 * cb6[15u].y) + cb6[15u].z;
            frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_2 = (_1648 * cb6[15u].y) + cb6[15u].z;
          }
          frontier_phi_22_31_ladder_39_ladder_45_ladder = frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder;
          frontier_phi_22_31_ladder_39_ladder_45_ladder_1 = frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_1;
          frontier_phi_22_31_ladder_39_ladder_45_ladder_2 = frontier_phi_22_31_ladder_39_ladder_45_ladder_51_ladder_2;
        }
        frontier_phi_22_31_ladder_39_ladder = frontier_phi_22_31_ladder_39_ladder_45_ladder;
        frontier_phi_22_31_ladder_39_ladder_1 = frontier_phi_22_31_ladder_39_ladder_45_ladder_1;
        frontier_phi_22_31_ladder_39_ladder_2 = frontier_phi_22_31_ladder_39_ladder_45_ladder_2;
      }
      frontier_phi_22_31_ladder = frontier_phi_22_31_ladder_39_ladder;
      frontier_phi_22_31_ladder_1 = frontier_phi_22_31_ladder_39_ladder_1;
      frontier_phi_22_31_ladder_2 = frontier_phi_22_31_ladder_39_ladder_2;
    }
    _1473 = frontier_phi_22_31_ladder;
    _1479 = frontier_phi_22_31_ladder_2;
    _1485 = frontier_phi_22_31_ladder_1;
  }
  _27[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(_1157, _1163, _1169, 1.0f);
  if (!(asuint(cb6[15u]).x == 0u)) {
    _28[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(_1473, _1479, _1485, 1.0f);
  }
  */
  uint outputTypeEnum = asuint(cb6[13u].w);

  float3 outputColor1 = float3(_597, _599, _601);
  if (asuint(cb6[13u].y) != 0u) {
    ConvertColorParams params = {
      outputTypeEnum,  // outputTypeEnum
      cb6[14u].x,      // paperWhiteScaling
      cb6[14u].y,      // blackFloorAdjust
      cb6[14u].z,      // gammaCorrection
      cb6[16u].x,      // pqSaturation
      float3x3(
          cb6[22u].x, cb6[22u].y, cb6[22u].z,
          cb6[23u].x, cb6[23u].y, cb6[23u].z,
          cb6[24u].x, cb6[24u].y, cb6[24u].z),                             // pqMatrix
      float3(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y, cb0[0u].x)  // random3
    };
    outputColor1 = convertColor(outputColor1, params);
  }

  _27[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(outputColor1.rgb, 1.0f);

  if (asuint(cb6[15u]).x != 0u) {
    float3 outputColor2 = float3(_292, _295, _297);
    ConvertColorParams params = {
      outputTypeEnum,  // outputTypeEnum
      cb6[15u].y,      // paperWhiteScaling
      cb6[15u].z,      // blackFloorAdjust
      cb6[15u].w,      // gammaCorrection
      cb6[16u].x,      // pqSaturation
      float3x3(
          cb6[26u].x, cb6[26u].y, cb6[26u].z,
          cb6[27u].x, cb6[27u].y, cb6[27u].z,
          cb6[28u].x, cb6[28u].y, cb6[28u].z),                             // pqMatrix
      float3(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y, cb0[0u].x)  // random3
    };

    outputColor2 = convertColor(outputColor2, params);
    _28[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(outputColor2.rgb, 1.0f);
  }
}

[numthreads(16, 16, 1)]
void main(SPIRV_Cross_Input stage_input) {
  gl_GlobalInvocationID = stage_input.gl_GlobalInvocationID;
  comp_main();
}

#include "./colormath.hlsl"
#include "./cp2077.h"
#include "./injectedBuffer.hlsl"

static float _305;

cbuffer _31_33 : register(b0, space0) {
  float4 cb0[30] : packoffset(c0);
};

cbuffer _41_43 : register(b6, space0) {
  float4 cb6[34] : packoffset(c0);
};

cbuffer _36_38 : register(b12, space0) {
  float4 cb12[99] : packoffset(c0);
};

Texture2D<float4> _8 : register(t32, space0);
Texture2D<uint2> _12 : register(t51, space0);
Texture2D<float4> _13 : register(t0, space0);
Texture2D<float4> _14 : register(t1, space0);
Texture2D<float4> _15 : register(t2, space0);
Texture2D<float4> _16 : register(t3, space0);
Texture2D<float4> _17 : register(t5, space0);
Texture2D<float4> _18 : register(t6, space0);
Buffer<uint4> _21 : register(t7, space0);
Texture2D<float4> _22 : register(t8, space0);
Buffer<uint4> _23 : register(t9, space0);
RWTexture2D<float4> _26 : register(u0, space0);
RWTexture2D<float4> _27 : register(u1, space0);
SamplerState _46 : register(s0, space0);

static uint3 gl_WorkGroupID;
static uint3 gl_LocalInvocationID;
struct SPIRV_Cross_Input {
  uint3 gl_WorkGroupID : SV_GroupID;
  uint3 gl_LocalInvocationID : SV_GroupThreadID;
};

void comp_main() {
  uint4 _75 = _21.Load(gl_WorkGroupID.x);
  uint _76 = _75.x;
  uint _84 = ((_76 << 4u) & 1048560u) + gl_LocalInvocationID.x;
  uint _85 = ((_76 >> 16u) << 4u) + gl_LocalInvocationID.y;
  float _86 = float(_84);
  float _87 = float(_85);
  float _96 = (_86 + 0.5f) / cb6[16u].z;
  float _97 = (_87 + 0.5f) / cb6[16u].w;
  bool _113 = ((_96 < cb6[9u].y) || (_97 < cb6[9u].z)) || (((1.0f - cb6[9u].y) < _96) || ((1.0f - cb6[9u].z) < _97));
  float _114;
  float _118;
  float _121;
  if (_113) {
    _114 = 0.0f;
    _118 = 0.0f;
    _121 = 0.0f;
  } else {
    bool _133 = cb6[0u].x > 0.0f;
    float _135 = _96 + (-0.5f);
    float _137 = _97 + (-0.5f);
    float _141 = cb6[0u].y + 0.119999997317790985107421875f;
    float _145 = max(_141 + abs(_135), 0.0f);
    float _146 = max(_141 + abs(_137), 0.0f);
    float _153 = clamp(sqrt((_146 * _146) + (_145 * _145)) * 20.0f, 0.0f, 1.0f);
    float _160 = ((_153 * _153) * cb6[0u].x) * (3.0f - (_153 * 2.0f));
    float _161 = _160 * 0.699999988079071044921875f;
    float _164 = ceil(_161) - _161;
    float _167 = (_164 * 50.0f) + 1.0f;
    float _176 = (((cos(cb0[0u].x) * 2.0f) + 200.0f) * _164) + 1.0f;
    float _188 = frac(floor(_167 * _96) * 0.103100001811981201171875f);
    float _189 = frac(floor(_176 * _97) * 0.103100001811981201171875f);
    float _190 = _189 + 33.3300018310546875f;
    float _192 = _188 + 33.3300018310546875f;
    float _193 = dot(float3(_188, _189, _188), float3(_190, _192, _192));
    float _199 = _189 + _188;
    float _202 = frac((_199 + (_193 * 2.0f)) * (_193 + _188));
    float _227 = abs(sin((_160 * 0.1680000126361846923828125f) * cb0[0u].x));
    float _232 = (_160 * 0.14000000059604644775390625f) + 1.0f;
    float _238 = dot(float3(_189, _188, _189), float3(_192, _190, _190));
    float _251 = (floor(frac(frac((_199 + (_238 * 2.0f)) * (_238 + _189)) + _227) * _232) * (1.0f / (((cos(frac(_202 + abs(sin(cb0[0u].x * 5000.0f))) * cb0[0u].x) * 0.0199999995529651641845703125f) + 1.0f) * _176))) + _97;
    float _253 = _251 * cb6[16u].w;
    float _262 = frac(round((_160 * 0.125f) * _253) * 0.103100001811981201171875f);
    float _263 = frac((_160 * 2.0620000362396240234375f) * cb0[0u].x);
    float _264 = _263 + 33.3300018310546875f;
    float _265 = _262 + 33.3300018310546875f;
    float _266 = dot(float3(_262, _263, _262), float3(_264, _265, _265));
    float _280 = frac(round((_160 * 0.012500000186264514923095703125f) * _253) * 0.103100001811981201171875f);
    float _281 = _280 + 33.3300018310546875f;
    float _282 = dot(float3(_280, _263, _280), float3(_264, _281, _281));
    float _299 = _133 ? ((((cb6[16u].z * ((floor(frac(_202 + _227) * _232) * (1.0f / (((sin(frac(_202 + abs(sin(cb0[0u].x * 100.0f))) * cb0[0u].x) * 0.0199999995529651641845703125f) + 1.0f) * _167))) + _96)) + 2.0f) + ((((_160 * _160) * 960.0f) * frac(((_263 + _262) + (_266 * 2.0f)) * (_266 + _262))) * frac(((_263 + _280) + (_282 * 2.0f)) * (_282 + _280)))) / cb6[16u].z) : _96;
    float _300 = _133 ? _251 : _97;
    bool _301 = cb6[0u].y > 0.0f;
    bool _303 = cb6[16u].x > 0.0f;
    float _1124;
    float _1125;
    float _1126;
    float _1128;
    float _1130;
    if (_301) {
      float _332 = floor(_299 * 2.5f) * 0.4000000059604644775390625f;
      float _334 = floor(_300 * 10.0f) * 0.100000001490116119384765625f;
      float _336 = _332 + 0.20000000298023223876953125f;
      float _338 = _334 + 0.0500000007450580596923828125f;
      float _342 = floor((cb0[0u].x * 2.0f) + (cb6[0u].y * 20.0f));
      float _343 = _342 * 0.00999999977648258209228515625f;
      float _357 = _336 + (((_343 + 1.0f) - (floor(_342 * 9.9999997473787516355514526367188e-05f) * 100.0f)) * 0.00999999977648258209228515625f);
      float _358 = _338 + (((_342 + 1.0f) - (floor(_343) * 100.0f)) * 0.00999999977648258209228515625f);
      float _368 = frac(_357 * 0.103100001811981201171875f);
      float _369 = frac(_358 * 0.103100001811981201171875f);
      float _371 = _368 + 33.3300018310546875f;
      float _372 = dot(float3(_368, _369, _368), float3(_369 + 33.3300018310546875f, _371, _371));
      float _380 = frac(((_369 + _368) + (_372 * 2.0f)) * (_372 + _368));
      float _383 = ((1.0f - _380) * ((cb6[0u].y * 0.75f) + (-0.100000001490116119384765625f))) + _380;
      float _386 = round(_383 - (_383 * (0.5f - (cb6[0u].y * 0.375f))));
      float _387 = _386 * _386;
      float _388 = _299 - _336;
      float _389 = _300 - _338;
      float _390 = _336 * _357;
      float _391 = _338 * _358;
      float _396 = (_332 + 0.300000011920928955078125f) * _357;
      float _397 = (_334 + 0.1500000059604644775390625f) * _358;
      float _400 = frac(_390 * 0.103100001811981201171875f);
      float _401 = frac(_391 * 0.103100001811981201171875f);
      float _403 = _400 + 33.3300018310546875f;
      float _404 = dot(float3(_400, _401, _400), float3(_401 + 33.3300018310546875f, _403, _403));
      float _417 = frac((_390 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _418 = frac((_391 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _420 = _417 + 33.3300018310546875f;
      float _421 = dot(float3(_417, _418, _417), float3(_418 + 33.3300018310546875f, _420, _420));
      float _435 = floor(frac(((_401 + _400) + (_404 * 2.0f)) * (_404 + _400)) * 3.25f) * 0.100000001490116119384765625f;
      float _436 = floor(frac(((_418 + _417) + (_421 * 2.0f)) * (_421 + _417)) * 3.25f) * 0.02500000037252902984619140625f;
      float _438 = _435 + (-0.20000000298023223876953125f);
      float _440 = _436 + (-0.0500000007450580596923828125f);
      float _444 = frac(_396 * 0.103100001811981201171875f);
      float _445 = frac(_397 * 0.103100001811981201171875f);
      float _447 = _444 + 33.3300018310546875f;
      float _448 = dot(float3(_444, _445, _444), float3(_445 + 33.3300018310546875f, _447, _447));
      float _461 = frac((_396 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _462 = frac((_397 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _464 = _461 + 33.3300018310546875f;
      float _465 = dot(float3(_461, _462, _461), float3(_462 + 33.3300018310546875f, _464, _464));
      float _478 = floor(frac(((_445 + _444) + (_448 * 2.0f)) * (_448 + _444)) * 3.25f) * 0.100000001490116119384765625f;
      float _479 = floor(frac(((_462 + _461) + (_465 * 2.0f)) * (_465 + _461)) * 3.25f) * 0.02500000037252902984619140625f;
      float _480 = _478 + (-0.20000000298023223876953125f);
      float _481 = _479 + (-0.0500000007450580596923828125f);
      float _484 = _388 - _438;
      float _485 = _389 - _440;
      float _495 = (-0.0250000059604644775390625f) - _388;
      float _497 = _495 + _435;
      float _498 = (-0.006250001490116119384765625f) - _389;
      float _500 = _498 + _436;
      uint _515 = (((((uint(_497 > 0.0f) + ((_497 < 0.0f) ? 4294967295u : 0u)) + ((_484 < 0.0f) ? 4294967295u : 0u)) + uint(_484 > 0.0f)) + ((_485 < 0.0f) ? 4294967295u : 0u)) + uint(_485 > 0.0f)) + (uint(_500 > 0.0f) - uint(_500 < 0.0f));
      float _523 = min(float(int(uint(int(_515) > int(3u)) - uint(int(_515) < int(3u)))), 0.0f);
      float _528 = _388 - _480;
      float _529 = _389 - _481;
      float _538 = _495 + _478;
      float _539 = _498 + _479;
      uint _554 = (((((uint(_538 > 0.0f) + ((_538 < 0.0f) ? 4294967295u : 0u)) + ((_528 < 0.0f) ? 4294967295u : 0u)) + uint(_528 > 0.0f)) + ((_529 < 0.0f) ? 4294967295u : 0u)) + uint(_529 > 0.0f)) + (uint(_539 > 0.0f) - uint(_539 < 0.0f));
      float _561 = min(float(int(uint(int(_554) > int(3u)) - uint(int(_554) < int(3u)))), 0.0f);
      float _568 = _299 + ((_387 * (((_438 - _480) * _561) + ((_480 - _438) * _523))) * 1.2000000476837158203125f);
      float _572 = _300 + ((_387 * (((_440 - _481) * _561) + ((_481 - _440) * _523))) * 1.2000000476837158203125f);
      uint _573 = uint(_96);
      uint _574 = uint(_97);
      float4 _575 = _8.Load(int3(uint2(_573, _574), 0u));
      float _577 = _575.y;
      float _906;
      if (_303) {
        uint _825 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * float(_573)), uint(cb12[79u].y * float(_574))), 0u)).y & 31u);
        float4 _828 = _14.Load(int3(uint2(_573 & 255u, _574 & 255u), 0u));
        float _831 = _828.y;
        float _835 = ((_828.x + _831) + _828.z) * 0.3333333432674407958984375f;
        float _836 = cb6[16u].x * _577;
        float _843 = _831 - _835;
        float _845 = _835 + (-0.5f);
        uint4 _851 = asuint(cb6[21u]);
        float _900 = (((((((_845 + (cb6[22u].w * _843)) * cb6[22u].y) * float(min((_851.x & _825), 1u))) + 1.0f) * (_836 / max(1.0f - _836, 9.9999999747524270787835121154785e-07f))) * ((((_845 + (cb6[23u].w * _843)) * cb6[23u].y) * float(min((_851.y & _825), 1u))) + 1.0f)) * ((((_845 + (cb6[24u].w * _843)) * cb6[24u].y) * float(min((_851.z & _825), 1u))) + 1.0f)) * ((((_845 + (cb6[25u].w * _843)) * cb6[25u].y) * float(min((_851.w & _825), 1u))) + 1.0f);
        _906 = cb6[16u].y * (_900 / max(_900 + 1.0f, 1.0f));
      } else {
        _906 = _577;
      }
      float _908 = _906 * cb6[0u].y;
      float _910 = (_568 + (-0.5f)) + _908;
      float _912 = (0.5f - _572) + _908;
      float _914 = atan(_912 / _910);
      bool _919 = _910 < 0.0f;
      bool _920 = _910 == 0.0f;
      bool _921 = _912 >= 0.0f;
      bool _922 = _912 < 0.0f;
      float _936 = sqrt((_910 * _910) + (_912 * _912));
      float _939 = ((_920 && _921) ? 1.57079637050628662109375f : ((_920 && _922) ? (-1.57079637050628662109375f) : ((_919 && _922) ? (_914 + (-3.1415927410125732421875f)) : ((_919 && _921) ? (_914 + 3.1415927410125732421875f) : _914)))) + clamp(cb6[0u].y * (_906 * 0.5f), 0.0f, 1.0f);
      uint _950 = uint(cb6[16u].z * frac((cos(_939) * _936) + 0.5f));
      uint _951 = uint(cb6[16u].w * frac(0.5f - (sin(_939) * _936)));
      float4 _952 = _8.Load(int3(uint2(_950, _951), 0u));
      float _954 = _952.x;
      float _955 = _952.y;
      float _956 = _952.z;
      float frontier_phi_14_12_ladder;
      float frontier_phi_14_12_ladder_1;
      float frontier_phi_14_12_ladder_2;
      float frontier_phi_14_12_ladder_3;
      float frontier_phi_14_12_ladder_4;
      if (_303) {
        uint _1312 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * float(_950)), uint(cb12[79u].y * float(_951))), 0u)).y & 31u);
        float4 _1315 = _14.Load(int3(uint2(_950 & 255u, _951 & 255u), 0u));
        float _1317 = _1315.x;
        float _1318 = _1315.y;
        float _1319 = _1315.z;
        float _1322 = ((_1317 + _1318) + _1319) * 0.3333333432674407958984375f;
        float _1323 = cb6[16u].x * _954;
        float _1324 = cb6[16u].x * _955;
        float _1325 = cb6[16u].x * _956;
        float _1338 = _1317 - _1322;
        float _1339 = _1318 - _1322;
        float _1340 = _1319 - _1322;
        float _1344 = _1322 + (-0.5f);
        uint4 _1356 = asuint(cb6[21u]);
        float _1360 = float(min((_1356.x & _1312), 1u));
        float _1388 = float(min((_1356.y & _1312), 1u));
        float _1416 = float(min((_1356.z & _1312), 1u));
        float _1444 = float(min((_1356.w & _1312), 1u));
        float _1451 = (((((((_1344 + (cb6[22u].w * _1338)) * cb6[22u].x) * _1360) + 1.0f) * (_1323 / max(1.0f - _1323, 9.9999999747524270787835121154785e-07f))) * ((((_1344 + (cb6[23u].w * _1338)) * cb6[23u].x) * _1388) + 1.0f)) * ((((_1344 + (cb6[24u].w * _1338)) * cb6[24u].x) * _1416) + 1.0f)) * ((((_1344 + (cb6[25u].w * _1338)) * cb6[25u].x) * _1444) + 1.0f);
        float _1452 = (((((((_1344 + (cb6[22u].w * _1339)) * cb6[22u].y) * _1360) + 1.0f) * (_1324 / max(1.0f - _1324, 9.9999999747524270787835121154785e-07f))) * ((((_1344 + (cb6[23u].w * _1339)) * cb6[23u].y) * _1388) + 1.0f)) * ((((_1344 + (cb6[24u].w * _1339)) * cb6[24u].y) * _1416) + 1.0f)) * ((((_1344 + (cb6[25u].w * _1339)) * cb6[25u].y) * _1444) + 1.0f);
        float _1453 = (((((((_1344 + (cb6[22u].w * _1340)) * cb6[22u].z) * _1360) + 1.0f) * (_1325 / max(1.0f - _1325, 9.9999999747524270787835121154785e-07f))) * ((((_1344 + (cb6[23u].w * _1340)) * cb6[23u].z) * _1388) + 1.0f)) * ((((_1344 + (cb6[24u].w * _1340)) * cb6[24u].z) * _1416) + 1.0f)) * ((((_1344 + (cb6[25u].w * _1340)) * cb6[25u].z) * _1444) + 1.0f);
        frontier_phi_14_12_ladder = cb6[16u].y * (_1453 / max(_1453 + 1.0f, 1.0f));
        frontier_phi_14_12_ladder_1 = cb6[16u].y * (_1452 / max(_1452 + 1.0f, 1.0f));
        frontier_phi_14_12_ladder_2 = cb6[16u].y * (_1451 / max(_1451 + 1.0f, 1.0f));
        frontier_phi_14_12_ladder_3 = _572;
        frontier_phi_14_12_ladder_4 = _568;
      } else {
        frontier_phi_14_12_ladder = _956;
        frontier_phi_14_12_ladder_1 = _955;
        frontier_phi_14_12_ladder_2 = _954;
        frontier_phi_14_12_ladder_3 = _572;
        frontier_phi_14_12_ladder_4 = _568;
      }
      _1124 = frontier_phi_14_12_ladder_4;
      _1125 = frontier_phi_14_12_ladder_3;
      _1126 = frontier_phi_14_12_ladder_2;
      _1128 = frontier_phi_14_12_ladder_1;
      _1130 = frontier_phi_14_12_ladder;
    } else {
      float4 _578 = _8.Load(int3(uint2(_84, _85), 0u));
      float _580 = _578.x;
      float _581 = _578.y;
      float _582 = _578.z;
      float frontier_phi_14_6_ladder;
      float frontier_phi_14_6_ladder_1;
      float frontier_phi_14_6_ladder_2;
      float frontier_phi_14_6_ladder_3;
      float frontier_phi_14_6_ladder_4;
      if (_303) {
        uint _969 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * _86), uint(cb12[79u].y * _87)), 0u)).y & 31u);
        float4 _972 = _14.Load(int3(uint2(_84 & 255u, _85 & 255u), 0u));
        float _974 = _972.x;
        float _975 = _972.y;
        float _976 = _972.z;
        float _979 = ((_974 + _975) + _976) * 0.3333333432674407958984375f;
        float _980 = cb6[16u].x * _580;
        float _981 = cb6[16u].x * _581;
        float _982 = cb6[16u].x * _582;
        float _995 = _974 - _979;
        float _996 = _975 - _979;
        float _997 = _976 - _979;
        float _1001 = _979 + (-0.5f);
        uint4 _1013 = asuint(cb6[21u]);
        float _1017 = float(min((_1013.x & _969), 1u));
        float _1045 = float(min((_1013.y & _969), 1u));
        float _1073 = float(min((_1013.z & _969), 1u));
        float _1101 = float(min((_1013.w & _969), 1u));
        float _1108 = (((((((_1001 + (cb6[22u].w * _995)) * cb6[22u].x) * _1017) + 1.0f) * (_980 / max(1.0f - _980, 9.9999999747524270787835121154785e-07f))) * ((((_1001 + (cb6[23u].w * _995)) * cb6[23u].x) * _1045) + 1.0f)) * ((((_1001 + (cb6[24u].w * _995)) * cb6[24u].x) * _1073) + 1.0f)) * ((((_1001 + (cb6[25u].w * _995)) * cb6[25u].x) * _1101) + 1.0f);
        float _1109 = (((((((_1001 + (cb6[22u].w * _996)) * cb6[22u].y) * _1017) + 1.0f) * (_981 / max(1.0f - _981, 9.9999999747524270787835121154785e-07f))) * ((((_1001 + (cb6[23u].w * _996)) * cb6[23u].y) * _1045) + 1.0f)) * ((((_1001 + (cb6[24u].w * _996)) * cb6[24u].y) * _1073) + 1.0f)) * ((((_1001 + (cb6[25u].w * _996)) * cb6[25u].y) * _1101) + 1.0f);
        float _1110 = (((((((_1001 + (cb6[22u].w * _997)) * cb6[22u].z) * _1017) + 1.0f) * (_982 / max(1.0f - _982, 9.9999999747524270787835121154785e-07f))) * ((((_1001 + (cb6[23u].w * _997)) * cb6[23u].z) * _1045) + 1.0f)) * ((((_1001 + (cb6[24u].w * _997)) * cb6[24u].z) * _1073) + 1.0f)) * ((((_1001 + (cb6[25u].w * _997)) * cb6[25u].z) * _1101) + 1.0f);
        frontier_phi_14_6_ladder = cb6[16u].y * (_1110 / max(_1110 + 1.0f, 1.0f));
        frontier_phi_14_6_ladder_1 = cb6[16u].y * (_1109 / max(_1109 + 1.0f, 1.0f));
        frontier_phi_14_6_ladder_2 = cb6[16u].y * (_1108 / max(_1108 + 1.0f, 1.0f));
        frontier_phi_14_6_ladder_3 = _300;
        frontier_phi_14_6_ladder_4 = _299;
      } else {
        frontier_phi_14_6_ladder = _582;
        frontier_phi_14_6_ladder_1 = _581;
        frontier_phi_14_6_ladder_2 = _580;
        frontier_phi_14_6_ladder_3 = _300;
        frontier_phi_14_6_ladder_4 = _299;
      }
      _1124 = frontier_phi_14_6_ladder_4;
      _1125 = frontier_phi_14_6_ladder_3;
      _1126 = frontier_phi_14_6_ladder_2;
      _1128 = frontier_phi_14_6_ladder_1;
      _1130 = frontier_phi_14_6_ladder;
    }
    bool _1140 = cb6[1u].z > 0.0f;
    float _1472;
    if ((asuint(cb6[17u]).z != 0u) && _1140) {
      _1472 = (cb6[1u].z * (asfloat(_23.Load(6u).x) + (-1.0f))) + 1.0f;
    } else {
      _1472 = 1.0f;
    }
    float _1477 = _1124 + (-0.5f);
    float _1479 = (_1125 + (-0.5f)) * 2.0f;
    float _1487 = _1124 - (((_1479 * _1479) * _1477) * cb6[3u].x);
    float _1488 = _1125 - ((((_1477 * _1477) * 2.0f) * _1479) * cb6[3u].y);
    float _1491 = (_1487 + (-0.5f)) * 2.0f;
    float _1492 = (_1488 + (-0.5f)) * 2.0f;
    float _1494 = cb0[0u].x * 0.004999999888241291046142578125f;
    float _1497 = (clamp(_1488, 0.0f, 1.0f) + 1.0f) - _1494;
    float _1502 = clamp(abs(cos(_1497 * 650.0f)), 0.0f, 1.0f);
    float _1508 = clamp(_1487, 0.0f, 1.0f) + 1.0f;
    float _1509 = _1508 - _1494;
    float _1515 = sin(cb0[0u].x);
    float _1516 = _1508 + _1494;
    float _1531 = clamp(((((_1515 + _1515) * 0.100000001490116119384765625f) + 0.540000021457672119140625f) + ((clamp(abs(cos(_1516 * 550.0f)), 0.0f, 1.0f) + clamp(abs(cos(_1509 * 250.0f)), 0.0f, 1.0f)) * 0.1799999773502349853515625f)) * ((_1502 * 0.39999997615814208984375f) + 0.60000002384185791015625f), 0.0f, 1.0f);
    float _1690;
    float _1692;
    float _1694;
    if (cb6[1u].w > 0.0f) {
      float4 _1663 = _18.SampleLevel(_46, float2(_96, _97), 0.0f);
      float _1674 = (clamp(abs(cos(_1497 * 250.0f)), 0.0f, 1.0f) * 0.0007999999797903001308441162109375f) + 0.00120000005699694156646728515625f;
      float _1681 = (_1502 * 0.001199999940581619739532470703125f) + 0.001800000085495412349700927734375f;
      float _1683 = (_1674 + _1663.x) - _1681;
      float _1684 = (_1674 + _1663.y) - _1681;
      float _1685 = (_1674 + _1663.z) - _1681;
      float _1862;
      float _1863;
      float _1864;
      if (cb6[6u].x > 0.0f) {
        float _1852 = clamp((sqrt((_137 * _137) + (_135 * _135)) - cb6[5u].z) / (cb6[5u].w - cb6[5u].z), 0.0f, 1.0f);
        float _1858 = 1.0f - (((_1852 * _1852) * (3.0f - (_1852 * 2.0f))) * cb6[6u].x);
        _1862 = _1858 * _1683;
        _1863 = _1858 * _1684;
        _1864 = _1858 * _1685;
      } else {
        _1862 = _1683;
        _1863 = _1684;
        _1864 = _1685;
      }
      float _1866 = dot(float3(_1862, _1863, _1864), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      _1690 = (((_1862 - _1866) * cb6[6u].y) + _1866) * cb6[1u].w;
      _1692 = (((_1863 - _1866) * cb6[6u].y) + _1866) * cb6[1u].w;
      _1694 = (((_1864 - _1866) * cb6[6u].y) + _1866) * cb6[1u].w;
    } else {
      _1690 = 0.0f;
      _1692 = 0.0f;
      _1694 = 0.0f;
    }
    float _1894;
    float _1895;
    float _1896;
    if (cb6[2u].x > 0.0f) {
      float4 _1883 = _17.SampleLevel(_46, float2(_1487, 1.0f - _1488), 0.0f);

      // Custom
      if (injectedData.toneMapGammaCorrection >= 1.f) {
        _1883 = renodx::color::correct::Gamma(max(0.f, _1883));
      }

      _1894 = (cb6[2u].x * _1883.x) + _1690;
      _1895 = (cb6[2u].x * _1883.y) + _1692;
      _1896 = (cb6[2u].x * _1883.z) + _1694;
    } else {
      _1894 = _1690;
      _1895 = _1692;
      _1896 = _1694;
    }
    float _2006;
    float _2007;
    float _2008;
    if (_1140) {
      float4 _1969 = _16.SampleLevel(_46, float2(_1124, _1125), 0.0f);
      float4 _1976 = _15.SampleLevel(_46, float2(_1124, _1125), 0.0f);
      float _1981 = _1976.w;
      float _1982 = 1.0f - _1981;
      float _1987 = (_1982 * _1969.w) + _1981;
      _2006 = (((_1987 * ((_1976.x - _1126) + (_1982 * _1969.x))) + _1126) * cb6[1u].z) + _1894;
      _2007 = (((_1987 * ((_1976.y - _1128) + (_1982 * _1969.y))) + _1128) * cb6[1u].z) + _1895;
      _2008 = (((_1987 * ((_1976.z - _1130) + (_1982 * _1969.z))) + _1130) * cb6[1u].z) + _1896;
    } else {
      _2006 = _1894;
      _2007 = _1895;
      _2008 = _1896;
    }
    float _2179;
    float _2181;
    float _2183;
    if (cb6[1u].x > 0.0f) {
      float _2086 = cb6[6u].w * _1491;
      float _2087 = cb6[6u].w * _1492;
      float4 _2091 = _13.SampleLevel(_46, float2(_2086 + _1487, _2087 + _1488), 0.0f);
      float4 _2095 = _13.SampleLevel(_46, float2(_1487, _1488), 0.0f);
      float4 _2102 = _13.SampleLevel(_46, float2(_1487 - _2086, _1488 - _2087), 0.0f);
      float4 _2117 = _13.SampleLevel(_46, float2((cb6[7u].x * _1491) + _1487, (cb6[7u].y * _1492) + _1488), 1.0f);
      float4 _2128 = _13.SampleLevel(_46, float2((cb6[7u].z * _1491) + _1487, (cb6[7u].w * _1492) + _1488), 2.0f);
      float4 _2143 = _13.SampleLevel(_46, float2((cb6[8u].x * _1491) + _1487, (cb6[8u].y * _1492) + _1488), 4.0f);

      // Custom
      if (injectedData.toneMapGammaCorrection >= 1.f) {
        _2091 = renodx::color::correct::Gamma(max(0.f, _2091));
        _2095 = renodx::color::correct::Gamma(max(0.f, _2095));
        _2102 = renodx::color::correct::Gamma(max(0.f, _2102));
        _2117 = renodx::color::correct::Gamma(max(0.f, _2117));
        _2128 = renodx::color::correct::Gamma(max(0.f, _2128));
        _2143 = renodx::color::correct::Gamma(max(0.f, _2143));
      }

      float _2175 = 1.0f - (((_2095.w + _2091.w) + _2102.w) * 0.3333333432674407958984375f);
      float _2176 = clamp(_1531 * (((cb6[8u].w * _2128.x) + (cb6[8u].z * _2117.x)) + (cb6[9u].x * _2143.x)), 0.0f, 1.0f) * _2175;
      float _2177 = clamp(_1531 * (((cb6[8u].w * _2128.y) + (cb6[8u].z * _2117.y)) + (cb6[9u].x * _2143.y)), 0.0f, 1.0f) * _2175;
      float _2178 = clamp(_1531 * (((cb6[8u].w * _2128.z) + (cb6[8u].z * _2117.z)) + (cb6[9u].x * _2143.z)), 0.0f, 1.0f) * _2175;
      float _2267;
      float _2268;
      float _2269;
      if (_1140) {
        float _2263 = 1.0f - (dot(float3(cb6[1u].z * _1126, cb6[1u].z * _1128, cb6[1u].z * _1130), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f)) * 0.699999988079071044921875f);
        _2267 = _2263 * _2176;
        _2268 = _2263 * _2177;
        _2269 = _2263 * _2178;
      } else {
        _2267 = _2176;
        _2268 = _2177;
        _2269 = _2178;
      }
      float _2271 = dot(float3(_2267, _2268, _2269), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      float _2283 = cb6[1u].x * _1472;
      float _2296 = _1487 - cb6[3u].z;
      float _2297 = _1488 - cb6[3u].w;
      float4 _2303 = _13.SampleLevel(_46, float2(_2296, _2297), 0.0f);
      float _2305 = _2303.w;
      float _2318 = 1.0f - (cb6[4u].x * clamp(exp2(log2(abs((clamp(cb6[4u].y, 0.0f, 1.0f) * (_22.SampleLevel(_46, float2(_2296, _2297), cb6[4u].y + (-1.0f)).w - _2305)) + _2305)) * 0.819999992847442626953125f), 0.0f, 1.0f));
      float _2319 = _1515 * 0.00999999977648258209228515625f;
      float _2347 = (((clamp((cos((_2319 + _1488) * 1700.0f) + 1.0f) * 0.75f, 0.0f, 1.0f) * 0.00850000046193599700927734375f) + 0.00150000001303851604461669921875f) * (((_2319 + 0.540000021457672119140625f) + (_1515 * 0.100000001490116119384765625f)) + ((clamp(abs(cos(_1516 * 350.0f)), 0.0f, 1.0f) + clamp(abs(cos(_1509 * 350.0f)), 0.0f, 1.0f)) * 0.1799999773502349853515625f))) + 0.9900000095367431640625f;
      float _2349 = (_2091.x * 2.0f) * _2347;
      float _2350 = (_2095.y * 2.0f) * _2347;
      float _2351 = (_2102.z * 2.0f) * _2347;
      float _2352 = dot(float3(_2349, _2350, _2351), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      float _2379 = cb6[5u].x * _1472;
      float4 _2381 = _22.SampleLevel(_46, float2(_1487, _1488), cb6[5u].y);
      _2179 = (((((_2349 - _2352) * cb6[6u].z) + _2352) * _1472) + ((((_2283 * (((_2267 - _2271) * cb6[6u].z) + _2271)) + _2006) * _2175) * _2318)) + (_2381.x * _2379);
      _2181 = (((((_2350 - _2352) * cb6[6u].z) + _2352) * _1472) + ((((_2283 * (((_2268 - _2271) * cb6[6u].z) + _2271)) + _2007) * _2175) * _2318)) + (_2381.y * _2379);
      _2183 = (((((_2351 - _2352) * cb6[6u].z) + _2352) * _1472) + ((((_2283 * (((_2269 - _2271) * cb6[6u].z) + _2271)) + _2008) * _2175) * _2318)) + (_2381.z * _2379);
    } else {
      _2179 = _2006;
      _2181 = _2007;
      _2183 = _2008;
    }
    float _117;
    float _120;
    float _123;
    if (cb6[1u].y > 0.0f) {
      float4 _2389 = _13.Load(int3(uint2(_84, _85), 0u));
      float _2395 = (_1472 * 2.0f) * cb6[1u].y;
      _117 = (_2395 * _2389.x) + _2179;
      _120 = (_2395 * _2389.y) + _2181;
      _123 = (_2395 * _2389.z) + _2183;
    } else {
      _117 = _2179;
      _120 = _2181;
      _123 = _2183;
    }
    float frontier_phi_1_56_ladder;
    float frontier_phi_1_56_ladder_1;
    float frontier_phi_1_56_ladder_2;
    if (_301) {
      float _2410;
      float _2412;
      float _2414;
      float _2416;
      float _2418;
      float _2420;
      uint _2422;
      _2410 = 1.0f;
      _2412 = 1.0f;
      _2414 = 1.0f;
      _2416 = ((_86 / cb6[16u].z) * 0.800000011920928955078125f) * (cb6[16u].z / cb6[16u].w);
      _2418 = (_87 / cb6[16u].w) * 5.0f;
      _2420 = 1.0f;
      _2422 = 1u;
      float _2411;
      float _2413;
      float _2415;
      for (;;) {
        float _2424 = float(int(_2422));
        float _2425 = _2424 + _2416;
        float _2426 = _2424 + _2418;
        float _2427 = floor(_2425);
        float _2428 = floor(_2426);
        float _2436 = frac(_2427 * 0.103100001811981201171875f);
        float _2437 = frac(_2428 * 0.10300000011920928955078125f);
        float _2438 = frac(_2427 * 0.097300000488758087158203125f);
        float _2439 = frac(_2428 * 0.109899997711181640625f);
        float _2444 = dot(float4(_2436, _2437, _2438, _2439), float4(_2439 + 33.3300018310546875f, _2438 + 33.3300018310546875f, _2436 + 33.3300018310546875f, _2437 + 33.3300018310546875f));
        float _2447 = _2444 + _2436;
        float _2448 = _2444 + _2437;
        float _2449 = _2444 + _2438;
        float _2450 = _2444 + _2439;
        float _2459 = frac((_2447 + _2448) * _2449);
        float _2460 = frac((_2447 + _2449) * _2448);
        float _2461 = frac((_2448 + _2449) * _2450);
        bool _2480 = frac((_2449 + _2450) * _2447) > 0.5f;
        _2411 = (_2480 ? _2459 : 1.0f) * _2410;
        _2413 = (_2480 ? _2460 : 1.0f) * _2412;
        _2415 = (_2480 ? _2461 : 1.0f) * _2414;
        uint _2423 = _2422 + 1u;
        if (_2423 == 15u) {
          break;
        } else {
          _2410 = _2411;
          _2412 = _2413;
          _2414 = _2415;
          _2416 = (((_2461 * 0.20000000298023223876953125f) * (frac(_2425) - _2420)) * frac(floor(((cb0[0u].x * 0.1500000059604644775390625f) + 300.0f) / _2459) * _2459)) + _2416;
          _2418 = ((_2461 * _2460) * (frac(_2426) - _2420)) + _2418;
          _2420 *= (-2.0f);
          _2422 = _2423;
        }
      }
      float _2499 = floor((cb0[0u].x * 2.0f) + cb6[0u].y);
      float _2500 = _2499 * 0.00999999977648258209228515625f;
      float _2510 = ((_2500 + 1.0f) - (floor(_2499 * 9.9999997473787516355514526367188e-05f) * 100.0f)) * 0.00999999977648258209228515625f;
      float _2511 = ((_2499 + 1.0f) - (floor(_2500) * 100.0f)) * 0.00999999977648258209228515625f;
      float _2516 = 0.5f - (cb6[0u].y * 0.375f);
      float _2517 = (cb6[0u].y * 0.75f) + (-0.100000001490116119384765625f);
      float _2520 = frac((((floor(_1124 * 10.0f) * 0.100000001490116119384765625f) + 0.0500000007450580596923828125f) + _2510) * 0.103100001811981201171875f);
      float _2521 = frac((((floor(_1125 * 33.33333587646484375f) * 0.02999999932944774627685546875f) + 0.014999999664723873138427734375f) + _2511) * 0.103100001811981201171875f);
      float _2523 = _2520 + 33.3300018310546875f;
      float _2524 = dot(float3(_2520, _2521, _2520), float3(_2521 + 33.3300018310546875f, _2523, _2523));
      float _2532 = frac(((_2521 + _2520) + (_2524 * 2.0f)) * (_2524 + _2520));
      float _2535 = ((1.0f - _2532) * _2517) + _2532;
      float _2556 = frac((((floor(_1124 * 11.111110687255859375f) * 0.0900000035762786865234375f) + 0.04500000178813934326171875f) + _2510) * 0.103100001811981201171875f);
      float _2557 = frac((((floor(_1125 * 25.0f) * 0.039999999105930328369140625f) + 0.0199999995529651641845703125f) + _2511) * 0.103100001811981201171875f);
      float _2559 = _2556 + 33.3300018310546875f;
      float _2560 = dot(float3(_2556, _2557, _2556), float3(_2557 + 33.3300018310546875f, _2559, _2559));
      float _2568 = frac(((_2557 + _2556) + (_2560 * 2.0f)) * (_2560 + _2556));
      float _2571 = ((1.0f - _2568) * _2517) + _2568;
      float _2575 = max(0.0f, _2411);
      float _2576 = max(0.0f, _2413);
      float _2577 = max(0.0f, _2415);
      float _2579 = max(_2575, max(_2576, _2577));
      float _2580 = _2579 * _2579;
      float _2581 = _2575 * 2.0f;
      float _2582 = _2576 * 0.100000001490116119384765625f;
      float _2583 = _2577 * 0.25f;
      float _2591 = clamp((round(_2535 - (_2535 * _2516)) * 5.0f) * round(_2571 - (_2571 * _2516)), 0.0f, 1.0f) * 3.0f;
      frontier_phi_1_56_ladder = (((_2583 - _123) + (_2580 * _2583)) * _2591) + _123;
      frontier_phi_1_56_ladder_1 = (((_2582 - _120) + (_2580 * _2582)) * _2591) + _120;
      frontier_phi_1_56_ladder_2 = (((_2581 - _117) + (_2580 * _2581)) * _2591) + _117;
    } else {
      frontier_phi_1_56_ladder = _123;
      frontier_phi_1_56_ladder_1 = _120;
      frontier_phi_1_56_ladder_2 = _117;
    }
    _114 = frontier_phi_1_56_ladder_2;
    _118 = frontier_phi_1_56_ladder_1;
    _121 = frontier_phi_1_56_ladder;
  }
  bool _129 = asuint(cb6[19u]).x == 0u;
  float _304;
  float _307;
  float _309;
  if (_129) {
    _304 = _305;
    _307 = _305;
    _309 = _305;
  } else {
    float4 _317 = _8.Load(int3(uint2(_84, _85), 0u));
    float _320 = _317.x;
    float _321 = _317.y;
    float _322 = _317.z;
    float _808;
    float _809;
    float _810;
    if (cb6[16u].x > 0.0f) {
      float4 _649 = _14.Load(int3(uint2(_84 & 255u, _85 & 255u), 0u));

      // Custom: Replace Film Grain
      if (injectedData.fxFilmGrain) {
        float3 grainedColor = renodx::effects::ApplyFilmGrain(
            float3(_320, _321, _322),
            _649.xy,
            frac(cb0[0u].x / 1000.f),
            injectedData.fxFilmGrain * 0.03f,
            (cb6[12u].y == 1.f) ? 1.f : (203.f / 100.f));
        _808 = grainedColor.r;
        _809 = grainedColor.g;
        _810 = grainedColor.b;
      } else {
        uint _645 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * _86), uint(cb12[79u].y * _87)), 0u)).y & 31u);
        float _651 = _649.x;
        float _652 = _649.y;
        float _653 = _649.z;
        float _656 = ((_651 + _652) + _653) * 0.3333333432674407958984375f;
        float _658 = cb6[16u].x * _320;
        float _659 = cb6[16u].x * _321;
        float _660 = cb6[16u].x * _322;
        float _675 = _651 - _656;
        float _676 = _652 - _656;
        float _677 = _653 - _656;
        float _681 = _656 + (-0.5f);
        uint4 _694 = asuint(cb6[21u]);
        float _698 = float(min((_694.x & _645), 1u));
        float _727 = float(min((_694.y & _645), 1u));
        float _756 = float(min((_694.z & _645), 1u));
        float _785 = float(min((_694.w & _645), 1u));
        float _792 = (((((((_681 + (cb6[22u].w * _675)) * cb6[22u].x) * _698) + 1.0f) * (_658 / max(1.0f - _658, 9.9999999747524270787835121154785e-07f))) * ((((_681 + (cb6[23u].w * _675)) * cb6[23u].x) * _727) + 1.0f)) * ((((_681 + (cb6[24u].w * _675)) * cb6[24u].x) * _756) + 1.0f)) * ((((_681 + (cb6[25u].w * _675)) * cb6[25u].x) * _785) + 1.0f);
        float _793 = (((((((_681 + (cb6[22u].w * _676)) * cb6[22u].y) * _698) + 1.0f) * (_659 / max(1.0f - _659, 9.9999999747524270787835121154785e-07f))) * ((((_681 + (cb6[23u].w * _676)) * cb6[23u].y) * _727) + 1.0f)) * ((((_681 + (cb6[24u].w * _676)) * cb6[24u].y) * _756) + 1.0f)) * ((((_681 + (cb6[25u].w * _676)) * cb6[25u].y) * _785) + 1.0f);
        float _794 = (((((((_681 + (cb6[22u].w * _677)) * cb6[22u].z) * _698) + 1.0f) * (_660 / max(1.0f - _660, 9.9999999747524270787835121154785e-07f))) * ((((_681 + (cb6[23u].w * _677)) * cb6[23u].z) * _727) + 1.0f)) * ((((_681 + (cb6[24u].w * _677)) * cb6[24u].z) * _756) + 1.0f)) * ((((_681 + (cb6[25u].w * _677)) * cb6[25u].z) * _785) + 1.0f);
        _808 = cb6[16u].y * (_792 / max(_792 + 1.0f, 1.0f));
        _809 = cb6[16u].y * (_793 / max(_793 + 1.0f, 1.0f));
        _810 = cb6[16u].y * (_794 / max(_794 + 1.0f, 1.0f));
      }
    } else {
      _808 = _320;
      _809 = _321;
      _810 = _322;
    }
    float frontier_phi_3_10_ladder;
    float frontier_phi_3_10_ladder_1;
    float frontier_phi_3_10_ladder_2;
    if (_113) {
      frontier_phi_3_10_ladder = 0.0f;
      frontier_phi_3_10_ladder_1 = 0.0f;
      frontier_phi_3_10_ladder_2 = 0.0f;
    } else {
      float4 _1263 = _16.SampleLevel(_46, float2(_96, _97), 0.0f);
      float4 _1271 = _15.SampleLevel(_46, float2(_96, _97), 0.0f);
      float _1276 = _1271.w;
      float _1277 = 1.0f - _1276;
      float _1282 = (_1277 * _1263.w) + _1276;
      frontier_phi_3_10_ladder = ((_1282 * ((_1271.z - _810) + (_1277 * _1263.z))) + _810) * cb6[1u].z;
      frontier_phi_3_10_ladder_1 = ((_1282 * ((_1271.y - _809) + (_1277 * _1263.y))) + _809) * cb6[1u].z;
      frontier_phi_3_10_ladder_2 = ((_1282 * ((_1271.x - _808) + (_1277 * _1263.x))) + _808) * cb6[1u].z;
    }
    _304 = frontier_phi_3_10_ladder_2;
    _307 = frontier_phi_3_10_ladder_1;
    _309 = frontier_phi_3_10_ladder;
  }

  // Custom: Switch to colormath
  /*
  uint4 _314 = asuint(cb6[17u]);
  float _583;
  float _589;
  float _595;
  if (_314.y == 0u) {
    _583 = _114;
    _589 = _118;
    _595 = _121;
  } else {
    uint _629 = _314.w;
    float _1205;
    float _1206;
    float _1207;
    if (cb6[18u].z != 1.0f) {
      _1205 = exp2(log2(abs(_114)) * cb6[18u].z);
      _1206 = exp2(log2(abs(_118)) * cb6[18u].z);
      _1207 = exp2(log2(abs(_121)) * cb6[18u].z);
    } else {
      _1205 = _114;
      _1206 = _118;
      _1207 = _121;
    }
    float _1217 = frac(_86 * 211.1488037109375f);
    float _1218 = frac(_87 * 210.944000244140625f);
    float _1219 = frac(cb0[0u].x * 6.227200031280517578125f);
    float _1222 = _1219 + 33.3300018310546875f;
    float _1223 = dot(float3(_1217, _1218, _1219), float3(_1218 + 33.3300018310546875f, _1217 + 33.3300018310546875f, _1222));
    float _1226 = _1223 + _1217;
    float _1227 = _1223 + _1218;
    float _1229 = _1226 + _1227;
    float _1234 = frac(_1229 * (_1223 + _1219));
    float _1235 = frac((_1226 * 2.0f) * _1227);
    float _1236 = frac(_1229 * _1226);
    float _1242 = frac((_86 + 64.0f) * 211.1488037109375f);
    float _1243 = frac((_87 + 64.0f) * 210.944000244140625f);
    float _1246 = dot(float3(_1242, _1243, _1219), float3(_1243 + 33.3300018310546875f, _1242 + 33.3300018310546875f, _1222));
    float _1249 = _1246 + _1242;
    float _1250 = _1246 + _1243;
    float _1252 = _1249 + _1250;
    float _1257 = frac(_1252 * (_1246 + _1219));
    float _1258 = frac((_1249 * 2.0f) * _1250);
    float _1259 = frac(_1252 * _1249);
    float frontier_phi_7_18_ladder;
    float frontier_phi_7_18_ladder_1;
    float frontier_phi_7_18_ladder_2;
    if (_629 == 0u) {
      float _1629 = (_1205 <= 0.003130800090730190277099609375f) ? (_1205 * 12.9200000762939453125f) : ((exp2(log2(abs(_1205)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1630 = (_1206 <= 0.003130800090730190277099609375f) ? (_1206 * 12.9200000762939453125f) : ((exp2(log2(abs(_1206)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1631 = (_1207 <= 0.003130800090730190277099609375f) ? (_1207 * 12.9200000762939453125f) : ((exp2(log2(abs(_1207)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1632 = _1629 * 510.0f;
      float _1634 = _1630 * 510.0f;
      float _1635 = _1631 * 510.0f;
      frontier_phi_7_18_ladder = (((_1235 + (-0.5f)) + (min(min(1.0f, _1634), 510.0f - _1634) * (_1258 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1630;
      frontier_phi_7_18_ladder_1 = (((_1236 + (-0.5f)) + (min(min(1.0f, _1635), 510.0f - _1635) * (_1259 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1631;
      frontier_phi_7_18_ladder_2 = (((_1234 + (-0.5f)) + (min(min(1.0f, _1632), 510.0f - _1632) * (_1257 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1629;
    } else {
      float frontier_phi_7_18_ladder_28_ladder;
      float frontier_phi_7_18_ladder_28_ladder_1;
      float frontier_phi_7_18_ladder_28_ladder_2;
      if (_629 == 1u) {
        float _1760 = mad(0.043306000530719757080078125f, _1207, mad(0.329291999340057373046875f, _1206, _1205 * 0.627402007579803466796875f));
        float _1766 = mad(0.011359999887645244598388671875f, _1207, mad(0.9195439815521240234375f, _1206, _1205 * 0.06909500062465667724609375f));
        float _1772 = mad(0.89557802677154541015625f, _1207, mad(0.08802799880504608154296875f, _1206, _1205 * 0.0163940005004405975341796875f));
        float _1808 = exp2(log2(abs((((clamp(mad(_1772, cb6[26u].z, mad(_1766, cb6[26u].y, _1760 * cb6[26u].x)), 0.0f, 1.0f) - _1760) * cb6[20u].x) + _1760) * cb6[18u].x)) * 0.1593017578125f);
        float _1809 = exp2(log2(abs((((clamp(mad(_1772, cb6[27u].z, mad(_1766, cb6[27u].y, _1760 * cb6[27u].x)), 0.0f, 1.0f) - _1766) * cb6[20u].x) + _1766) * cb6[18u].x)) * 0.1593017578125f);
        float _1810 = exp2(log2(abs((((clamp(mad(_1772, cb6[28u].z, mad(_1766, cb6[28u].y, _1760 * cb6[28u].x)), 0.0f, 1.0f) - _1772) * cb6[20u].x) + _1772) * cb6[18u].x)) * 0.1593017578125f);
        frontier_phi_7_18_ladder_28_ladder = exp2(log2(abs(((_1809 * 18.8515625f) + 0.8359375f) / ((_1809 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_7_18_ladder_28_ladder_1 = exp2(log2(abs(((_1810 * 18.8515625f) + 0.8359375f) / ((_1810 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_7_18_ladder_28_ladder_2 = exp2(log2(abs(((_1808 * 18.8515625f) + 0.8359375f) / ((_1808 * 18.6875f) + 1.0f))) * 78.84375f);
      } else {
        float frontier_phi_7_18_ladder_28_ladder_34_ladder;
        float frontier_phi_7_18_ladder_28_ladder_34_ladder_1;
        float frontier_phi_7_18_ladder_28_ladder_34_ladder_2;
        if (_629 == 2u) {
          frontier_phi_7_18_ladder_28_ladder_34_ladder = _1206 * cb6[18u].x;
          frontier_phi_7_18_ladder_28_ladder_34_ladder_1 = _1207 * cb6[18u].x;
          frontier_phi_7_18_ladder_28_ladder_34_ladder_2 = _1205 * cb6[18u].x;
        } else {
          float frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder;
          float frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder_1;
          float frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder_2;
          if (_629 == 3u) {
            float _2021 = mad(_1207, cb6[26u].z, mad(_1206, cb6[26u].y, _1205 * cb6[26u].x)) * cb6[18u].x;
            float _2022 = mad(_1207, cb6[27u].z, mad(_1206, cb6[27u].y, _1205 * cb6[27u].x)) * cb6[18u].x;
            float _2023 = mad(_1207, cb6[28u].z, mad(_1206, cb6[28u].y, _1205 * cb6[28u].x)) * cb6[18u].x;
            float _2048 = (_2021 <= 0.003130800090730190277099609375f) ? (_2021 * 12.9200000762939453125f) : ((exp2(log2(abs(_2021)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2049 = (_2022 <= 0.003130800090730190277099609375f) ? (_2022 * 12.9200000762939453125f) : ((exp2(log2(abs(_2022)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2050 = (_2023 <= 0.003130800090730190277099609375f) ? (_2023 * 12.9200000762939453125f) : ((exp2(log2(abs(_2023)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2051 = _2048 * 2046.0f;
            float _2053 = _2049 * 2046.0f;
            float _2054 = _2050 * 2046.0f;
            frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder = (((_1235 + (-0.5f)) + (min(min(1.0f, _2053), 2046.0f - _2053) * (_1258 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2049;
            frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder_1 = (((_1236 + (-0.5f)) + (min(min(1.0f, _2054), 2046.0f - _2054) * (_1259 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2050;
            frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder_2 = (((_1234 + (-0.5f)) + (min(min(1.0f, _2051), 2046.0f - _2051) * (_1257 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2048;
          } else {
            frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder = (_1206 * cb6[18u].x) + cb6[18u].y;
            frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder_1 = (_1207 * cb6[18u].x) + cb6[18u].y;
            frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder_2 = (_1205 * cb6[18u].x) + cb6[18u].y;
          }
          frontier_phi_7_18_ladder_28_ladder_34_ladder = frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder;
          frontier_phi_7_18_ladder_28_ladder_34_ladder_1 = frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder_1;
          frontier_phi_7_18_ladder_28_ladder_34_ladder_2 = frontier_phi_7_18_ladder_28_ladder_34_ladder_42_ladder_2;
        }
        frontier_phi_7_18_ladder_28_ladder = frontier_phi_7_18_ladder_28_ladder_34_ladder;
        frontier_phi_7_18_ladder_28_ladder_1 = frontier_phi_7_18_ladder_28_ladder_34_ladder_1;
        frontier_phi_7_18_ladder_28_ladder_2 = frontier_phi_7_18_ladder_28_ladder_34_ladder_2;
      }
      frontier_phi_7_18_ladder = frontier_phi_7_18_ladder_28_ladder;
      frontier_phi_7_18_ladder_1 = frontier_phi_7_18_ladder_28_ladder_1;
      frontier_phi_7_18_ladder_2 = frontier_phi_7_18_ladder_28_ladder_2;
    }
    _583 = frontier_phi_7_18_ladder_2;
    _589 = frontier_phi_7_18_ladder;
    _595 = frontier_phi_7_18_ladder_1;
  }
  float _1142;
  float _1148;
  float _1154;
  if (_129) {
    _1142 = _304;
    _1148 = _307;
    _1154 = _309;
  } else {
    uint _1191 = _314.w;
    float _1548;
    float _1549;
    float _1550;
    if (cb6[19u].w != 1.0f) {
      _1548 = exp2(log2(abs(_304)) * cb6[19u].w);
      _1549 = exp2(log2(abs(_307)) * cb6[19u].w);
      _1550 = exp2(log2(abs(_309)) * cb6[19u].w);
    } else {
      _1548 = _304;
      _1549 = _307;
      _1550 = _309;
    }
    float _1557 = frac(_86 * 211.1488037109375f);
    float _1558 = frac(_87 * 210.944000244140625f);
    float _1559 = frac(cb0[0u].x * 6.227200031280517578125f);
    float _1562 = _1559 + 33.3300018310546875f;
    float _1563 = dot(float3(_1557, _1558, _1559), float3(_1558 + 33.3300018310546875f, _1557 + 33.3300018310546875f, _1562));
    float _1566 = _1563 + _1557;
    float _1567 = _1563 + _1558;
    float _1569 = _1566 + _1567;
    float _1574 = frac(_1569 * (_1563 + _1559));
    float _1575 = frac((_1566 * 2.0f) * _1567);
    float _1576 = frac(_1569 * _1566);
    float _1581 = frac((_86 + 64.0f) * 211.1488037109375f);
    float _1582 = frac((_87 + 64.0f) * 210.944000244140625f);
    float _1585 = dot(float3(_1581, _1582, _1559), float3(_1582 + 33.3300018310546875f, _1581 + 33.3300018310546875f, _1562));
    float _1588 = _1585 + _1581;
    float _1589 = _1585 + _1582;
    float _1591 = _1588 + _1589;
    float _1596 = frac(_1591 * (_1585 + _1559));
    float _1597 = frac((_1588 * 2.0f) * _1589);
    float _1598 = frac(_1591 * _1588);
    float frontier_phi_15_26_ladder;
    float frontier_phi_15_26_ladder_1;
    float frontier_phi_15_26_ladder_2;
    if (_1191 == 0u) {
      float _1725 = (_1548 <= 0.003130800090730190277099609375f) ? (_1548 * 12.9200000762939453125f) : ((exp2(log2(abs(_1548)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1726 = (_1549 <= 0.003130800090730190277099609375f) ? (_1549 * 12.9200000762939453125f) : ((exp2(log2(abs(_1549)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1727 = (_1550 <= 0.003130800090730190277099609375f) ? (_1550 * 12.9200000762939453125f) : ((exp2(log2(abs(_1550)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1728 = _1725 * 510.0f;
      float _1729 = _1726 * 510.0f;
      float _1730 = _1727 * 510.0f;
      frontier_phi_15_26_ladder = (((_1575 + (-0.5f)) + (min(min(1.0f, _1729), 510.0f - _1729) * (_1597 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1726;
      frontier_phi_15_26_ladder_1 = (((_1576 + (-0.5f)) + (min(min(1.0f, _1730), 510.0f - _1730) * (_1598 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1727;
      frontier_phi_15_26_ladder_2 = (((_1574 + (-0.5f)) + (min(min(1.0f, _1728), 510.0f - _1728) * (_1596 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1725;
    } else {
      float frontier_phi_15_26_ladder_32_ladder;
      float frontier_phi_15_26_ladder_32_ladder_1;
      float frontier_phi_15_26_ladder_32_ladder_2;
      if (_1191 == 1u) {
        float _1899 = mad(0.043306000530719757080078125f, _1550, mad(0.329291999340057373046875f, _1549, _1548 * 0.627402007579803466796875f));
        float _1902 = mad(0.011359999887645244598388671875f, _1550, mad(0.9195439815521240234375f, _1549, _1548 * 0.06909500062465667724609375f));
        float _1905 = mad(0.89557802677154541015625f, _1550, mad(0.08802799880504608154296875f, _1549, _1548 * 0.0163940005004405975341796875f));
        float _1939 = exp2(log2(abs((((clamp(mad(_1905, cb6[30u].z, mad(_1902, cb6[30u].y, _1899 * cb6[30u].x)), 0.0f, 1.0f) - _1899) * cb6[20u].x) + _1899) * cb6[19u].y)) * 0.1593017578125f);
        float _1940 = exp2(log2(abs((((clamp(mad(_1905, cb6[31u].z, mad(_1902, cb6[31u].y, _1899 * cb6[31u].x)), 0.0f, 1.0f) - _1902) * cb6[20u].x) + _1902) * cb6[19u].y)) * 0.1593017578125f);
        float _1941 = exp2(log2(abs((((clamp(mad(_1905, cb6[32u].z, mad(_1902, cb6[32u].y, _1899 * cb6[32u].x)), 0.0f, 1.0f) - _1905) * cb6[20u].x) + _1905) * cb6[19u].y)) * 0.1593017578125f);
        frontier_phi_15_26_ladder_32_ladder = exp2(log2(abs(((_1940 * 18.8515625f) + 0.8359375f) / ((_1940 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_15_26_ladder_32_ladder_1 = exp2(log2(abs(((_1941 * 18.8515625f) + 0.8359375f) / ((_1941 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_15_26_ladder_32_ladder_2 = exp2(log2(abs(((_1939 * 18.8515625f) + 0.8359375f) / ((_1939 * 18.6875f) + 1.0f))) * 78.84375f);
      } else {
        float frontier_phi_15_26_ladder_32_ladder_40_ladder;
        float frontier_phi_15_26_ladder_32_ladder_40_ladder_1;
        float frontier_phi_15_26_ladder_32_ladder_40_ladder_2;
        if (_1191 == 2u) {
          frontier_phi_15_26_ladder_32_ladder_40_ladder = _1549 * cb6[19u].y;
          frontier_phi_15_26_ladder_32_ladder_40_ladder_1 = _1550 * cb6[19u].y;
          frontier_phi_15_26_ladder_32_ladder_40_ladder_2 = _1548 * cb6[19u].y;
        } else {
          float frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder;
          float frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder_1;
          float frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder_2;
          if (_1191 == 3u) {
            float _2196 = mad(_1550, cb6[30u].z, mad(_1549, cb6[30u].y, _1548 * cb6[30u].x)) * cb6[19u].y;
            float _2197 = mad(_1550, cb6[31u].z, mad(_1549, cb6[31u].y, _1548 * cb6[31u].x)) * cb6[19u].y;
            float _2198 = mad(_1550, cb6[32u].z, mad(_1549, cb6[32u].y, _1548 * cb6[32u].x)) * cb6[19u].y;
            float _2223 = (_2196 <= 0.003130800090730190277099609375f) ? (_2196 * 12.9200000762939453125f) : ((exp2(log2(abs(_2196)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2224 = (_2197 <= 0.003130800090730190277099609375f) ? (_2197 * 12.9200000762939453125f) : ((exp2(log2(abs(_2197)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2225 = (_2198 <= 0.003130800090730190277099609375f) ? (_2198 * 12.9200000762939453125f) : ((exp2(log2(abs(_2198)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2226 = _2223 * 2046.0f;
            float _2227 = _2224 * 2046.0f;
            float _2228 = _2225 * 2046.0f;
            frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder = (((_1575 + (-0.5f)) + (min(min(1.0f, _2227), 2046.0f - _2227) * (_1597 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2224;
            frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder_1 = (((_1576 + (-0.5f)) + (min(min(1.0f, _2228), 2046.0f - _2228) * (_1598 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2225;
            frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder_2 = (((_1574 + (-0.5f)) + (min(min(1.0f, _2226), 2046.0f - _2226) * (_1596 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2223;
          } else {
            frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder = (_1549 * cb6[19u].y) + cb6[19u].z;
            frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder_1 = (_1550 * cb6[19u].y) + cb6[19u].z;
            frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder_2 = (_1548 * cb6[19u].y) + cb6[19u].z;
          }
          frontier_phi_15_26_ladder_32_ladder_40_ladder = frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder;
          frontier_phi_15_26_ladder_32_ladder_40_ladder_1 = frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder_1;
          frontier_phi_15_26_ladder_32_ladder_40_ladder_2 = frontier_phi_15_26_ladder_32_ladder_40_ladder_46_ladder_2;
        }
        frontier_phi_15_26_ladder_32_ladder = frontier_phi_15_26_ladder_32_ladder_40_ladder;
        frontier_phi_15_26_ladder_32_ladder_1 = frontier_phi_15_26_ladder_32_ladder_40_ladder_1;
        frontier_phi_15_26_ladder_32_ladder_2 = frontier_phi_15_26_ladder_32_ladder_40_ladder_2;
      }
      frontier_phi_15_26_ladder = frontier_phi_15_26_ladder_32_ladder;
      frontier_phi_15_26_ladder_1 = frontier_phi_15_26_ladder_32_ladder_1;
      frontier_phi_15_26_ladder_2 = frontier_phi_15_26_ladder_32_ladder_2;
    }
    _1142 = frontier_phi_15_26_ladder_2;
    _1148 = frontier_phi_15_26_ladder;
    _1154 = frontier_phi_15_26_ladder_1;
  }
  _26[uint2(_84, _85)] = float4(_583, _589, _595, 1.0f);
  if (!(asuint(cb6[19u]).x == 0u)) {
    _27[uint2(_84, _85)] = float4(_1142, _1148, _1154, 1.0f);
  }
  */

  uint outputTypeEnum = asuint(cb6[17u].w);

  float3 outputColor1 = float3(_114, _118, _121);
  if (asuint(cb6[17u].y) != 0u) {
    ConvertColorParams params = {
      outputTypeEnum,  // outputTypeEnum
      cb6[18u].x,      // paperWhiteScaling
      cb6[18u].y,      // blackFloorAdjust
      cb6[18u].z,      // gammaCorrection
      cb6[20u].x,      // pqSaturation
      float3x3(
          cb6[26u].x, cb6[26u].y, cb6[26u].z,
          cb6[27u].x, cb6[27u].y, cb6[27u].z,
          cb6[28u].x, cb6[28u].y, cb6[28u].z),  // pqMatrix
      float3(_84, _85, cb0[0u].x)               // random3
    };
    outputColor1 = convertColor(outputColor1, params);
  }

  _26[uint2(_84, _85)] = float4(outputColor1.rgb, 1.0f);

  if (asuint(cb6[19u]).x != 0u) {
    float3 outputColor2 = float3(_304, _307, _309);
    ConvertColorParams params = {
      outputTypeEnum,  // outputTypeEnum
      cb6[19u].y,      // paperWhiteScaling
      cb6[19u].z,      // blackFloorAdjust
      cb6[19u].w,      // gammaCorrection
      cb6[20u].x,      // pqSaturation
      float3x3(
          cb6[30u].x, cb6[30u].y, cb6[30u].z,
          cb6[31u].x, cb6[31u].y, cb6[31u].z,
          cb6[32u].x, cb6[32u].y, cb6[32u].z),  // pqMatrix
      float3(_84, _85, cb0[0u].x)               // random3
    };

    outputColor2 = convertColor(outputColor2, params);
    _27[uint2(_84, _85)] = float4(outputColor2.rgb, 1.0f);
  }
}

[numthreads(16, 16, 1)]
void main(SPIRV_Cross_Input stage_input) {
  gl_WorkGroupID = stage_input.gl_WorkGroupID;
  gl_LocalInvocationID = stage_input.gl_LocalInvocationID;
  comp_main();
}
